/home/andy/checkout/scikit-learn/sklearn/feature_selection/selector_mixin.py:7: DeprecationWarning: sklearn.feature_selection.selector_mixin.SelectorMixin has been renamed sklearn.feature_selection.from_model._LearntSelectorMixin, and this alias will be removed in version 0.16
  DeprecationWarning)
/home/andy/checkout/scikit-learn/sklearn/pls.py:7: DeprecationWarning: This module has been moved to cross_decomposition and will be removed in 0.15
  "removed in 0.15", DeprecationWarning)
Test Dhillon's Spectral CoClustering on a simple problem. ... ok
Test Kluger methods on a checkerboard dataset. ... ok
sklearn.cluster.bicluster.tests.test_spectral.test_scale_normalize ... ok
sklearn.cluster.bicluster.tests.test_spectral.test_bistochastic_normalize ... ok
sklearn.cluster.bicluster.tests.test_spectral.test_log_normalize ... ok
sklearn.cluster.bicluster.tests.test_spectral.test_fit_best_piecewise ... ok
sklearn.cluster.bicluster.tests.test_spectral.test_project_and_cluster ... ok
sklearn.cluster.bicluster.tests.test_spectral.test_perfect_checkerboard ... /home/andy/.local/lib/python2.7/site-packages/scipy-0.11.0-py2.7-linux-x86_64.egg/scipy/sparse/linalg/eigen/arpack/arpack.py:1610: RuntimeWarning: invalid value encountered in sqrt
  s = np.sqrt(eigvals)
ok
sklearn.cluster.bicluster.tests.test_spectral.test_errors ... ok
sklearn.cluster.bicluster.tests.test_utils.test_get_indicators ... ok
sklearn.cluster.bicluster.tests.test_utils.test_get_shape ... ok
sklearn.cluster.bicluster.tests.test_utils.test_get_submatrix ... ok
Affinity Propagation algorithm ... ok
Tests the DBSCAN algorithm with a similarity array. ... ok
Tests the DBSCAN algorithm with a feature vector array. ... ok
Tests the DBSCAN algorithm with a callable metric. ... ok
sklearn.cluster.tests.test_dbscan.test_pickle ... ok
Check that we obtain the correct solution for structured ward tree. ... ok
Check that we obtain the correct solution for unstructured ward tree. ... ok
Check that the height of ward tree is sorted. ... ok
Check that we obtain the correct number of clusters with Ward clustering. ... ok
Check that we obtain the correct solution in a simplistic case ... ok
Test scikit ward with full connectivity (i.e. unstructured) vs scipy ... ok
Check that connectivity in the ward tree is propagated correctly during ... ok
Check non regression of a bug if a non item assignable connectivity is ... ok
sklearn.cluster.tests.test_k_means.test_square_norms ... ok
sklearn.cluster.tests.test_k_means.test_kmeans_dtype ... ok
sklearn.cluster.tests.test_k_means.test_labels_assignment_and_inertia ... ok
Check that dense and sparse minibatch update give the same results ... ok
sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init ... ok
sklearn.cluster.tests.test_k_means.test_k_means_check_fitted ... ok
sklearn.cluster.tests.test_k_means.test_k_means_new_centers ... ok
sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_2_jobs ... ok
sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_sparse ... ok
sklearn.cluster.tests.test_k_means.test_k_means_random_init ... ok
sklearn.cluster.tests.test_k_means.test_k_means_random_init_sparse ... ok
sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_not_precomputed ... ok
sklearn.cluster.tests.test_k_means.test_k_means_random_init_not_precomputed ... ok
sklearn.cluster.tests.test_k_means.test_k_means_perfect_init ... ok
sklearn.cluster.tests.test_k_means.test_mb_k_means_plus_plus_init_dense_array ... ok
sklearn.cluster.tests.test_k_means.test_mb_kmeans_verbose ... ok
sklearn.cluster.tests.test_k_means.test_mb_k_means_plus_plus_init_sparse_matrix ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_init_with_large_k ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_k_means_random_init_dense_array ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_k_means_random_init_sparse_csr ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_k_means_perfect_init_dense_array ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_k_means_perfect_init_sparse_csr ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_reassign ... ok
sklearn.cluster.tests.test_k_means.test_sparse_mb_k_means_callable_init ... ok
sklearn.cluster.tests.test_k_means.test_mini_batch_k_means_random_init_partial_fit ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_default_init_size ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_tol ... ok
sklearn.cluster.tests.test_k_means.test_minibatch_set_init_size ... ok
sklearn.cluster.tests.test_k_means.test_k_means_invalid_init ... ok
sklearn.cluster.tests.test_k_means.test_mini_match_k_means_invalid_init ... ok
Check if copy_x=False returns nearly equal X after de-centering. ... ok
Check k_means with a bad initialization does not yield a singleton ... ok
sklearn.cluster.tests.test_k_means.test_predict ... ok
sklearn.cluster.tests.test_k_means.test_score ... ok
sklearn.cluster.tests.test_k_means.test_predict_minibatch_dense_input ... ok
sklearn.cluster.tests.test_k_means.test_predict_minibatch_kmeanspp_init_sparse_input ... ok
sklearn.cluster.tests.test_k_means.test_predict_minibatch_random_init_sparse_input ... ok
sklearn.cluster.tests.test_k_means.test_input_dtypes ... ok
sklearn.cluster.tests.test_k_means.test_transform ... ok
sklearn.cluster.tests.test_k_means.test_fit_transform ... ok
Check that increasing the number of init increases the quality ... ok
sklearn.cluster.tests.test_k_means.test_k_means_function ... ok
Test MeanShift algorithm ... ok
Non-regression: before fit, there should be not fitted attributes. ... ok
Test the bin seeding technique which can be used in the mean shift ... ok
sklearn.cluster.tests.test_spectral.test_spectral_clustering ... ok
sklearn.cluster.tests.test_spectral.test_spectral_lobpcg_mode ... ok
sklearn.cluster.tests.test_spectral.test_spectral_amg_mode ... ok
sklearn.cluster.tests.test_spectral.test_spectral_unknown_mode ... ok
sklearn.cluster.tests.test_spectral.test_spectral_unknown_assign_labels ... ok
sklearn.cluster.tests.test_spectral.test_spectral_clustering_sparse ... ok
sklearn.cluster.tests.test_spectral.test_affinities ... /home/andy/checkout/scikit-learn/sklearn/manifold/spectral_embedding_.py:226: UserWarning: Graph is not fully connected, spectral embedding may not work as expected.
  warnings.warn("Graph is not fully connected, spectral embedding"
ok
sklearn.cluster.tests.test_spectral.test_discretize ... ok
Tests Covariance module on a simple dataset. ... ok
Tests ShrunkCovariance module on a simple dataset. ... ok
Tests LedoitWolf module on a simple dataset. ... ok
Tests OAS module on a simple dataset. ... ok
sklearn.covariance.tests.test_graph_lasso.test_graph_lasso ... ok
sklearn.covariance.tests.test_graph_lasso.test_graph_lasso_cv ... /home/andy/checkout/scikit-learn/sklearn/covariance/graph_lasso_.py:193: RuntimeWarning: invalid value encountered in multiply
  * coefs)
/home/andy/checkout/scikit-learn/sklearn/covariance/graph_lasso_.py:195: RuntimeWarning: invalid value encountered in multiply
  * coefs)
ok
Tests the FastMCD algorithm implementation ... ok
sklearn.covariance.tests.test_robust_covariance.test_mcd_issue1127 ... ok
sklearn.covariance.tests.test_robust_covariance.test_outlier_detection ... ok
Doctest: sklearn.cross_decomposition.cca_.CCA ... ok
Doctest: sklearn.cross_decomposition.pls_.PLSCanonical ... ok
Doctest: sklearn.cross_decomposition.pls_.PLSRegression ... ok
test_pls.test_pls ... ok
test_pls.test_PLSSVD ... ok
test_pls.test_scale ... ok
Doctest: sklearn.cross_validation.Bootstrap ... ok
Doctest: sklearn.cross_validation.KFold ... ok
Doctest: sklearn.cross_validation.LeaveOneLabelOut ... ok
Doctest: sklearn.cross_validation.LeaveOneOut ... ok
Doctest: sklearn.cross_validation.LeavePLabelOut ... ok
Doctest: sklearn.cross_validation.LeavePOut ... ok
Doctest: sklearn.cross_validation.ShuffleSplit ... ok
Doctest: sklearn.cross_validation.StratifiedKFold ... ok
Doctest: sklearn.cross_validation.StratifiedShuffleSplit ... ok
Doctest: sklearn.cross_validation.train_test_split ... ok
Doctest: sklearn.datasets.base.load_boston ... ok
Doctest: sklearn.datasets.base.load_digits ... ok
Doctest: sklearn.datasets.base.load_iris ... ok
Doctest: sklearn.datasets.base.load_sample_image ... ok
Doctest: sklearn.datasets.base.load_sample_images ... ok
Doctest: sklearn.datasets.mldata.fetch_mldata ... ok
Doctest: sklearn.datasets.samples_generator.make_blobs ... ok
sklearn.datasets.tests.test_20news.test_20news ... ok
sklearn.datasets.tests.test_20news.test_20news_vectorized ... SKIP
sklearn.datasets.tests.test_base.test_data_home ... ok
sklearn.datasets.tests.test_base.test_default_empty_load_files ... ok
sklearn.datasets.tests.test_base.test_default_load_files ... ok
sklearn.datasets.tests.test_base.test_load_files_w_categories_desc_and_encoding ... ok
sklearn.datasets.tests.test_base.test_load_files_wo_load_content ... ok
sklearn.datasets.tests.test_base.test_load_sample_images ... ok
sklearn.datasets.tests.test_base.test_load_digits ... ok
sklearn.datasets.tests.test_base.test_load_digits_n_class_lt_10 ... ok
sklearn.datasets.tests.test_base.test_load_sample_image ... ok
sklearn.datasets.tests.test_base.test_load_missing_sample_image_error ... ok
sklearn.datasets.tests.test_base.test_load_diabetes ... ok
sklearn.datasets.tests.test_base.test_load_linnerud ... ok
sklearn.datasets.tests.test_base.test_load_iris ... ok
sklearn.datasets.tests.test_base.test_load_boston ... ok
sklearn.datasets.tests.test_covtype.test_fetch ... SKIP
sklearn.datasets.tests.test_lfw.test_load_empty_lfw_people ... ok
sklearn.datasets.tests.test_lfw.test_load_fake_lfw_people ... ok
sklearn.datasets.tests.test_lfw.test_load_fake_lfw_people_too_restrictive ... ok
sklearn.datasets.tests.test_lfw.test_load_empty_lfw_pairs ... ok
sklearn.datasets.tests.test_lfw.test_load_fake_lfw_pairs ... ok
sklearn.datasets.tests.test_mldata.test_mldata_filename ... ok
Test that fetch_mldata is able to download and cache a data set. ... ok
sklearn.datasets.tests.test_mldata.test_fetch_one_column ... ok
sklearn.datasets.tests.test_mldata.test_fetch_multiple_column ... ok
sklearn.datasets.tests.test_samples_generator.test_make_classification ... ok
sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification ... ok
sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_indicator ... ok
sklearn.datasets.tests.test_samples_generator.test_make_hastie_10_2 ... ok
sklearn.datasets.tests.test_samples_generator.test_make_regression ... ok
sklearn.datasets.tests.test_samples_generator.test_make_regression_multitarget ... ok
sklearn.datasets.tests.test_samples_generator.test_make_blobs ... ok
sklearn.datasets.tests.test_samples_generator.test_make_friedman1 ... ok
sklearn.datasets.tests.test_samples_generator.test_make_friedman2 ... ok
sklearn.datasets.tests.test_samples_generator.test_make_friedman3 ... ok
sklearn.datasets.tests.test_samples_generator.test_make_low_rank_matrix ... ok
sklearn.datasets.tests.test_samples_generator.test_make_sparse_coded_signal ... ok
sklearn.datasets.tests.test_samples_generator.test_make_sparse_uncorrelated ... ok
sklearn.datasets.tests.test_samples_generator.test_make_spd_matrix ... ok
sklearn.datasets.tests.test_samples_generator.test_make_swiss_roll ... ok
sklearn.datasets.tests.test_samples_generator.test_make_s_curve ... ok
sklearn.datasets.tests.test_samples_generator.test_make_biclusters ... ok
sklearn.datasets.tests.test_samples_generator.test_make_checkerboard ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_fd ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_multilabel ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_files ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_n_features ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_compressed ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_invalid_order_file ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_zero_based ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_zero_based_auto ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_with_qid ... ok
sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file2 ... ok
sklearn.datasets.tests.test_svmlight_format.test_not_a_filename ... ok
sklearn.datasets.tests.test_svmlight_format.test_invalid_filename ... ok
sklearn.datasets.tests.test_svmlight_format.test_dump ... ok
sklearn.datasets.tests.test_svmlight_format.test_dump_concise ... ok
sklearn.datasets.tests.test_svmlight_format.test_dump_comment ... ok
sklearn.datasets.tests.test_svmlight_format.test_dump_invalid ... ok
sklearn.datasets.tests.test_svmlight_format.test_dump_query_id ... ok
Doctest: sklearn.decomposition.nmf.NMF ... ok
Doctest: sklearn.decomposition.nmf.ProjectedGradientNMF ... ok
Doctest: sklearn.decomposition.pca.PCA ... ok
Doctest: sklearn.decomposition.pca.ProbabilisticPCA ... ok
Doctest: sklearn.decomposition.pca.RandomizedPCA ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_shapes ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_overcomplete ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_reconstruction ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_nonzero_coefs ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_unknown_fit_algorithm ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_split ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_shapes ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_verbosity ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_estimator_shapes ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_overcomplete ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_initialization ... ok
sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_partial_fit ... SKIP
ok
sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error ... ok
sklearn.decomposition.tests.test_dict_learning.test_unknown_method ... ok
sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_estimator ... ok
Test FactorAnalysis ability to recover the data covariance structure ... ok
Test gram schmidt orthonormalization ... ok
Test the FastICA algorithm on very simple data. ... ok
sklearn.decomposition.tests.test_fastica.test_fastica_nowhiten ... ok
Test the FastICA algorithm on very simple data. ... ok
Test FastICA.fit_transform ... /home/andy/checkout/scikit-learn/sklearn/decomposition/fastica_.py:269: UserWarning: Ignoring n_components with whiten=False.
  warnings.warn('Ignoring n_components with whiten=False.')
ok
Test FastICA.inverse_transform ... ok
sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca ... ok
sklearn.decomposition.tests.test_kernel_pca.test_invalid_parameters ... ok
sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_sparse ... ok
sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_linear_kernel ... ok
sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_n_components ... ok
sklearn.decomposition.tests.test_kernel_pca.test_remove_zero_eig ... ok
sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_precomputed ... ok
sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_invalid_kernel ... ok
sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline ... ok
sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline_precomputed ... ok
Test the linear separability of the first 2D KPCA transform ... ok
Test NNDSVD behaviour on negative input ... ok
Test that NNDSVD does not return negative values ... ok
Test NNDSVD error ... ok
Test NNDSVD variants correctness ... ok
Test model fit behaviour on negative input ... ok
Test that the decomposition does not contain negative values ... ok
Test that the fit is not too far away ... ok
Test NLS solver's behaviour on negative input ... ok
Test that NLS solver doesn't return negative values ... ok
Test that the NLS results should be close ... ok
Test that NMF.transform returns close values ... ok
Smoke test for the case of more components than features. ... ok
Test sparseness ... ok
Test that sparse matrices are accepted as input ... ok
Test that transform works on sparse data.  Issue #2124 ... ok
PCA on dense arrays ... ok
Check that PCA output has unit-variance ... ok
Test that the projection of data is correct ... ok
Test that the projection of data can be inverted ... ok
Test that the projection by RandomizedPCA on dense data is correct ... ok
Test that the projection by RandomizedPCA on list data is correct ... ok
Test that RandomizedPCA is inversible on dense data ... ok
Test that the projection by RandomizedPCA on sparse data is correct ... ok
Test that RandomizedPCA is inversible on sparse data ... ok
Check automated dimensionality setting ... ok
TODO: explain what this is testing ... ok
TODO: explain what this is testing ... ok
sklearn.decomposition.tests.test_pca.test_infer_dim_3 ... ok
sklearn.decomposition.tests.test_pca.test_infer_dim_by_explained_variance ... ok
Test that probabilistic PCA yields a reasonable score ... ok
Test that probabilistic PCA correctly separated different datasets ... ok
The homoscedastic model should work slightly worth ... ok
Check that ppca select the right model ... ok
sklearn.decomposition.tests.test_sparse_pca.test_correct_shapes ... ok
sklearn.decomposition.tests.test_sparse_pca.test_fit_transform ... /home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: Xy param is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: coef_init is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: Xy param is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: coef_init is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: Xy param is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: coef_init is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: Xy param is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: coef_init is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
ok
Test that SparsePCA won't return NaN when there is 0 feature in all ... ok
sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_tall ... /home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: Xy param is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: coef_init is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: Xy param is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: coef_init is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: Xy param is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: coef_init is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: Xy param is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: coef_init is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: Xy param is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
/home/andy/checkout/scikit-learn/sklearn/decomposition/dict_learning.py:110: DeprecationWarning: coef_init is now ignored and will be removed in 0.15. See enet_path function.
  clf.fit(dictionary.T, X.T, Xy=cov, coef_init=init)
ok
sklearn.decomposition.tests.test_sparse_pca.test_initialization ... ok
sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_correct_shapes ... ok
sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_fit_transform ... SKIP
sklearn.decomposition.tests.test_truncated_svd.test_algorithms ... ok
sklearn.decomposition.tests.test_truncated_svd.test_attributes ... ok
sklearn.decomposition.tests.test_truncated_svd.test_too_many_components ... ok
sklearn.decomposition.tests.test_truncated_svd.test_sparse_formats ... ok
sklearn.decomposition.tests.test_truncated_svd.test_inverse_transform ... ok
sklearn.decomposition.tests.test_truncated_svd.test_integers ... ok
Doctest: sklearn.ensemble.partial_dependence.partial_dependence ... ok
Doctest: sklearn.ensemble.partial_dependence.plot_partial_dependence ... ok
Check BaseEnsemble methods. ... ok
Check that proper errors are triggered. ... ok
Check classification on a toy dataset. ... ok
Check consistency on dataset iris. ... ok
Check consistency on dataset boston house prices. ... ok
Regression models should not have a classes_ attribute. ... ok
Predict probabilities. ... ok
Check variable importances. ... ok
Check that oob prediction is a good estimation of the generalization ... ok
Check that oob prediction is pessimistic estimate. ... ok
Check that base trees can be grid-searched. ... ok
Check parallel computations. ... ok
Check pickability. ... ok
Check estimators on multi-output problems. ... ok
Test that n_classes_ and classes_ have proper shape. ... ok
sklearn.ensemble.tests.test_forest.test_random_hasher ... ok
sklearn.ensemble.tests.test_forest.test_parallel_train ... ok
Check classification on a toy dataset. ... ok
Check input parameter validation. ... ok
Test GradientBoostingClassifier on synthetic dataset used by ... ok
Check consistency on dataset boston house prices with least squares ... ok
Check consistency on dataset iris. ... ok
Test on synthetic regression datasets used in Leo Breiman, ... ok
sklearn.ensemble.tests.test_gradient_boosting.test_feature_importances ... ok
Predict probabilities. ... ok
Test input checks (shape and type of X and y). ... ok
X has wrong shape ... ok
test if max_features is valid. ... ok
Test to make sure random state is set properly. ... ok
Test whether staged decision function eventually gives ... ok
Test whether staged predict proba eventually gives ... ok
Check model serialization. ... ok
Check if we can fit even though all targets are equal. ... ok
Check if quantile loss with alpha=0.5 equals lad. ... ok
Test with non-integer class labels. ... ok
Test with float class labels. ... ok
Test with float class labels. ... ok
Test with different memory layouts of X and y ... ok
Test if oob_score is deprecated. ... ok
Test if oob improvement has correct shape and regression test. ... ok
Test if oob improvement has correct shape. ... ok
Check OOB improvement on multi-class dataset. ... ok
Check verbose=1 does not cause error. ... ok
Check verbose=2 does not cause error. ... ok
Check binomial deviance loss. ... ok
Check log odds estimator. ... ok
Test partial dependence for classifier ... ok
Test partial dependence for multi-class classifier ... ok
Test partial dependence for regressor ... ok
Test input validation of partial dependence. ... ok
Test partial dependence plot function. ... SKIP: Matplotlib not available.
Test partial dependence plot function input checks. ... SKIP: Matplotlib not available.
Test partial dependence plot function on multi-class input. ... SKIP: Matplotlib not available.
Check classification on a toy dataset. ... ok
Check classification on a toy dataset. ... ok
Check consistency on dataset iris. ... ok
Check consistency on dataset boston house prices. ... ok
Check staged predictions. ... ok
Check that base trees can be grid-searched. ... ok
Check pickability. ... ok
Check variable importances. ... ok
Test that it gives proper exception on deficient input. ... ok
Test different base estimators. ... ok
Doctest: sklearn.externals.joblib.parallel.Parallel ... ok
sklearn.externals.joblib.test.test_disk.test_disk_used ... ok
sklearn.externals.joblib.test.test_disk.test_memstr_to_kbytes(83886080, 83886080) ... ok
sklearn.externals.joblib.test.test_disk.test_memstr_to_kbytes(1433, 1433) ... ok
sklearn.externals.joblib.test.test_disk.test_memstr_to_kbytes(122880, 122880) ... ok
sklearn.externals.joblib.test.test_disk.test_memstr_to_kbytes(53, 53) ... ok
sklearn.externals.joblib.test.test_disk.test_mkdirp ... ok
sklearn.externals.joblib.test.test_format_stack.test_safe_repr ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_args({'y': 0, 'x': 1}, {'y': 0, 'x': 1}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_args({'y': 0}, {'y': 0}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_args({'x': 0}, {'x': 0}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_args({'x': 0}, {'x': 0}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_args({}, {}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_args({'y': 1, 'x': 0}, {'y': 1, 'x': 0}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_args({'x': 2}, {'x': 2}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_args({'x': 2}, {'x': 2}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_args({'x': 1}, {'x': 1}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_args_method ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_varargs({'y': 0, 'x': 1, '*': [], '**': {}}, {'y': 0, 'x': 1, '*': [], '**': {}}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_varargs({'y': 2, 'x': 1, '*': [3, 4], '**': {}}, {'y': 2, 'x': 1, '*': [3, 4], '**': {}}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_varargs({'y': 25, 'x': 1, '*': [], '**': {'ee': 2}}, {'y': 25, 'x': 1, '*': [], '**': {'ee': 2}}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_varargs({'y': 2, 'x': 1, '**': {'ee': 2}}, {'y': 2, 'x': 1, '**': {'ee': 2}}) ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_kwargs ... ok
sklearn.externals.joblib.test.test_func_inspect.test_filter_args_2 ... /home/andy/checkout/scikit-learn/sklearn/externals/joblib/test/test_func_inspect.py:122: UserWarning: Cannot inspect object <functools.partial object at 0x1626ef70>, ignore list will not work.
  nose.tools.assert_equal(filter_args(ff, ['y'], (1, )),
ok
sklearn.externals.joblib.test.test_func_inspect.test_func_name('f', 'f') ... ok
sklearn.externals.joblib.test.test_func_inspect.test_func_name('g', 'g') ... ok
sklearn.externals.joblib.test.test_func_inspect.test_func_inspect_errors ... ok
Make sure that calling the same method on two different instances ... ok
Make sure that filter_args returns decent error messages, for the ... ok
sklearn.externals.joblib.test.test_func_inspect.test_clean_win_chars ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
Smoke test hash on various types. ... ok
sklearn.externals.joblib.test.test_hashing.test_hash_methods ... ok
Test hashing with numpy arrays. ... ok
Test hashing with numpy arrays. ... ok
Test hashing with numpy arrays. ... ok
Test hashing with numpy arrays. ... ok
Test hashing with numpy arrays. ... ok
Test hashing with numpy arrays. ... ok
Test hashing with numpy arrays. ... ok
Test hashing with numpy arrays. ... ok
Test hashing with numpy arrays. ... ok
Test hashing with numpy arrays. ... ok
Test hashing with numpy arrays. ... ok
Test hashing with numpy arrays. ... ok
Check that memmap and arrays hash identically if coerce_mmap is ... ok
Check that memmap and arrays hash identically if coerce_mmap is ... ok
Check the performance of hashing numpy arrays: ... ok
Check the performance of hashing numpy arrays: ... ok
Make sure that calling the same method on two different instances ... ok
Make sure that calling the same _cached_ method on two different ... ok
Make sure that ndarrays with dtype `object' hash correctly. ... ok
sklearn.externals.joblib.test.test_hashing.test_numpy_scalar ... ok
sklearn.externals.joblib.test.test_hashing.test_dict_hash ... ok
sklearn.externals.joblib.test.test_hashing.test_set_hash ... ok
sklearn.externals.joblib.test.test_logger.test_print_time ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Simple test of memory lazy evaluation. ... ok
Test memory with cachedir=None: no memoize ... ok
Test memory with cachedir=None: no memoize ... ok
Test memory with cachedir=None: no memoize ... ok
Test memory with cachedir=None: no memoize ... ok
Test memory with a function with keyword arguments. ... ok
Test memory with a function with keyword arguments. ... ok
Test memory with a function with keyword arguments. ... ok
Test memory with a function with keyword arguments. ... ok
Test memory with a function with keyword arguments. ... ok
Test memory with a function with keyword arguments. ... ok
Test memory with a function with keyword arguments. ... ok
Test memory with a function with keyword arguments. ... ok
Test memory with a function with keyword arguments. ... ok
Test memory with a function with keyword arguments. ... ok
Test memory with a function with keyword arguments. ... ok
Test memory with a function with keyword arguments. ... ok
Test memory with a function with a lambda. ... ok
Test memory with a function with a lambda. ... ok
Test memory with a function with a lambda. ... ok
Test memory with a function with a lambda. ... ok
Test memory with a function with a lambda. ... ok
Test memory with a function with a lambda. ... ok
Test memory with a function with a lambda. ... ok
Test memory with a function with a lambda. ... ok
Test memory with a function with a lambda. ... ok
Test memory with a function with a lambda. ... ok
Test memory with a function with a lambda. ... ok
Test memory with a function with a lambda. ... ok
Check that name collisions with functions will raise warnings ... ok
Check that name collisions with functions will raise warnings ... ok
sklearn.externals.joblib.test.test_memory.test_memory_warning_lambda_collisions ... ok
sklearn.externals.joblib.test.test_memory.test_memory_warning_collision_detection(2, 2) ... ok
sklearn.externals.joblib.test.test_memory.test_memory_warning_collision_detection(True,) ... ok
Test memory with functools.partial. ... ok
Test memory with functools.partial. ... ok
Test memory with functools.partial. ... ok
Test memory with functools.partial. ... ok
Test memory with functools.partial. ... ok
Test memory with functools.partial. ... ok
Test memory with functools.partial. ... ok
Test memory with functools.partial. ... ok
Test memory with functools.partial. ... ok
Test memory with functools.partial. ... ok
Test memory with functools.partial. ... ok
Test memory with functools.partial. ... ok
Smoke test memory with a function with a function defined in an eval. ... ok
Check that if a function has a side effect in its arguments, it ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Test memory with a function with numpy arrays. ... ok
Smoketest the exception handling of Memory. ... ok
Smoketest the exception handling of Memory. ... ok
Smoketest the exception handling of Memory. ... ok
Test the ignore feature of memory ... ok
Test the ignore feature of memory ... ok
Test the ignore feature of memory ... ok
Test the ignore feature of memory ... ok
sklearn.externals.joblib.test.test_memory.test_func_dir('/tmp/tmpXMufLc/joblib/sklearn/externals/joblib/test/test_memory/f', '/tmp/tmpXMufLc/joblib/sklearn/externals/joblib/test/test_memory/f') ... ok
sklearn.externals.joblib.test.test_memory.test_func_dir(True,) ... ok
sklearn.externals.joblib.test.test_memory.test_func_dir(False,) ... ok
sklearn.externals.joblib.test.test_memory.test_func_dir(True,) ... ok
sklearn.externals.joblib.test.test_memory.test_func_dir(True,) ... ok
sklearn.externals.joblib.test.test_memory.test_func_dir(True,) ... ok
sklearn.externals.joblib.test.test_memory.test_func_dir(2, 2) ... ok
sklearn.externals.joblib.test.test_memory.test_persistence(2, 2) ... ok
sklearn.externals.joblib.test.test_memory.test_persistence('/tmp/tmpXMufLc/joblib', '/tmp/tmpXMufLc/joblib') ... ok
sklearn.externals.joblib.test.test_memory.test_format_signature('f([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])', 'f([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])') ... ok
sklearn.externals.joblib.test.test_memory.test_format_signature('f([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], y=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9])', 'f([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], y=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9])') ... ok
Test the format signature formatting with numpy. ... ok
sklearn.externals.joblib.test.test_my_exceptions.test_inheritance ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(None, None) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<type 'type'>, <type 'type'>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(True, True) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(1, 1) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(1L, 1L) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(1.0, 1.0) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types((1+0j), (1+0j)) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types('1', '1') ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(u'1', u'1') ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types((), ()) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types([], []) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types({}, {}) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<type 'file'>, <type 'file'>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<type 'buffer'>, <type 'buffer'>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<built-in function len>, <built-in function len>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<function _function at 0x3783500>, <function _function at 0x3783500>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<class sklearn.externals.joblib.test.test_numpy_pickle._class at 0x375dae0>, <class sklearn.externals.joblib.test.test_numpy_pickle._class at 0x375dae0>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<class 'sklearn.externals.joblib.test.test_numpy_pickle._newclass'>, <class 'sklearn.externals.joblib.test.test_numpy_pickle._newclass'>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(None, None) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<type 'type'>, <type 'type'>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(True, True) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(1, 1) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(1L, 1L) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(1.0, 1.0) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types((1+0j), (1+0j)) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types('1', '1') ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(u'1', u'1') ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types((), ()) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types([], []) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types({}, {}) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<type 'file'>, <type 'file'>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<type 'buffer'>, <type 'buffer'>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<built-in function len>, <built-in function len>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<function _function at 0x3783500>, <function _function at 0x3783500>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<class sklearn.externals.joblib.test.test_numpy_pickle._class at 0x375dae0>, <class sklearn.externals.joblib.test.test_numpy_pickle._class at 0x375dae0>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_standard_types(<class 'sklearn.externals.joblib.test.test_numpy_pickle._newclass'>, <class 'sklearn.externals.joblib.test.test_numpy_pickle._newclass'>) ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_value_error ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_numpy_persistence ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_memmap_persistence ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_masked_array_persistence ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_z_file ... ok
sklearn.externals.joblib.test.test_numpy_pickle.test_numpy_subclass ... ok
sklearn.externals.joblib.test.test_parallel.test_cpu_count ... ok
sklearn.externals.joblib.test.test_parallel.test_simple_parallel([0, 1, 4, 9, 16], [0, 1, 4, 9, 16]) ... ok
sklearn.externals.joblib.test.test_parallel.test_simple_parallel([0, 1, 4, 9, 16], [0, 1, 4, 9, 16]) ... ok
sklearn.externals.joblib.test.test_parallel.test_simple_parallel([0, 1, 4, 9, 16], [0, 1, 4, 9, 16]) ... ok
sklearn.externals.joblib.test.test_parallel.test_simple_parallel([0, 1, 4, 9, 16], [0, 1, 4, 9, 16]) ... ok
sklearn.externals.joblib.test.test_parallel.test_nested_loop ... ok
Check the keyword argument processing of pmap. ... ok
Check the keyword argument processing of pmap. ... ok
Check that pmap captures the errors when it is passed an object ... ok
sklearn.externals.joblib.test.test_parallel.test_error_capture ... ok
Test that with only one job, Parallel does act as a iterator. ... ok
Check that using pre_dispatch Parallel does indeed dispatch items ... ok
Make sure that exception raised during dispatch are indeed captured ... ok
sklearn.externals.joblib.test.test_parallel.test_multiple_spawning ... ok
sklearn.externals.joblib.test.test_parallel.test_joblib_exception ... ok
sklearn.externals.joblib.test.test_parallel.test_safe_function ... ok
Doctest: sklearn.externals.joblib ... ok
Doctest: sklearn.feature_extraction.dict_vectorizer.DictVectorizer ... ok
Doctest: sklearn.feature_extraction.image.extract_patches_2d ... ok
sklearn.feature_extraction.tests.test_dict_vectorizer.test_dictvectorizer ... ok
sklearn.feature_extraction.tests.test_dict_vectorizer.test_feature_selection ... ok
sklearn.feature_extraction.tests.test_dict_vectorizer.test_one_of_k ... ok
sklearn.feature_extraction.tests.test_dict_vectorizer.test_unseen_or_no_features ... ok
sklearn.feature_extraction.tests.test_dict_vectorizer.test_deterministic_vocabulary ... ok
sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_dicts ... ok
sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_strings ... ok
sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_pairs ... ok
sklearn.feature_extraction.tests.test_feature_hasher.test_hash_empty_input ... ok
sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_invalid_input ... ok
Test delayed input validation in fit (useful for grid search). ... ok
sklearn.feature_extraction.tests.test_image.test_img_to_graph ... ok
sklearn.feature_extraction.tests.test_image.test_grid_to_graph ... ok
sklearn.feature_extraction.tests.test_image.test_connect_regions ... ok
sklearn.feature_extraction.tests.test_image.test_connect_regions_with_grid ... ok
sklearn.feature_extraction.tests.test_image.test_extract_patches_all ... ok
sklearn.feature_extraction.tests.test_image.test_extract_patches_all_color ... ok
sklearn.feature_extraction.tests.test_image.test_extract_patches_all_rect ... ok
sklearn.feature_extraction.tests.test_image.test_extract_patches_max_patches ... ok
sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect ... ok
sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect_color ... ok
sklearn.feature_extraction.tests.test_image.test_patch_extractor_fit ... ok
sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches ... ok
sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches_default ... ok
sklearn.feature_extraction.tests.test_image.test_patch_extractor_all_patches ... ok
sklearn.feature_extraction.tests.test_image.test_patch_extractor_color ... ok
sklearn.feature_extraction.tests.test_image.test_extract_patches_strided ... ok
sklearn.feature_extraction.tests.test_image.test_extract_patches_square ... ok
sklearn.feature_extraction.tests.test_text.test_strip_accents ... ok
sklearn.feature_extraction.tests.test_text.test_to_ascii ... ok
sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams ... ok
sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams_and_bigrams ... ok
sklearn.feature_extraction.tests.test_text.test_unicode_decode_error ... ok
sklearn.feature_extraction.tests.test_text.test_char_ngram_analyzer ... ok
sklearn.feature_extraction.tests.test_text.test_char_wb_ngram_analyzer ... ok
sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary ... ok
sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_pipeline ... ok
sklearn.feature_extraction.tests.test_text.test_countvectorizer_stop_words ... ok
sklearn.feature_extraction.tests.test_text.test_countvectorizer_empty_vocabulary ... ok
sklearn.feature_extraction.tests.test_text.test_fit_countvectorizer_twice ... ok
sklearn.feature_extraction.tests.test_text.test_tf_idf_smoothing ... ok
sklearn.feature_extraction.tests.test_text.test_tfidf_no_smoothing ... ok
sklearn.feature_extraction.tests.test_text.test_sublinear_tf ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer ... ok
sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_setters ... ok
sklearn.feature_extraction.tests.test_text.test_hashing_vectorizer ... ok
sklearn.feature_extraction.tests.test_text.test_feature_names ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_max_features ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_max_df ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_min_df ... ok
sklearn.feature_extraction.tests.test_text.test_count_binary_occurrences ... ok
sklearn.feature_extraction.tests.test_text.test_hashed_binary_occurrences ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_inverse_transform ... ok
sklearn.feature_extraction.tests.test_text.test_count_vectorizer_pipeline_grid_selection ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_grid_selection ... ok
sklearn.feature_extraction.tests.test_text.test_vectorizer_unicode ... ok
sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_with_fixed_vocabulary ... ok
sklearn.feature_extraction.tests.test_text.test_pickling_vectorizer ... ok
sklearn.feature_extraction.tests.test_text.test_pickling_transformer ... ok
Doctest: sklearn.feature_selection.rfe.RFE ... ok
Doctest: sklearn.feature_selection.rfe.RFECV ... ok
sklearn.feature_selection.tests.test_base.test_transform_dense ... ok
sklearn.feature_selection.tests.test_base.test_transform_sparse ... ok
sklearn.feature_selection.tests.test_base.test_inverse_transform_dense ... ok
sklearn.feature_selection.tests.test_base.test_inverse_transform_sparse ... ok
sklearn.feature_selection.tests.test_base.test_get_support ... ok
Test Chi2 feature extraction ... ok
Check that chi2 works with a COO matrix ... ok
Check for proper error on negative numbers in the input X. ... ok
Test replacement for scipy.stats.chisquare against the original. ... ok
Test that our f_oneway gives the same result as scipy.stats ... ok
sklearn.feature_selection.tests.test_feature_select.test_f_oneway_ints ... ok
Test whether the F test yields meaningful results ... ok
Test whether the F test yields meaningful results ... ok
Test whether f_regression returns the same value ... ok
Test whether the F test yields meaningful results ... ok
Test whether the relative univariate feature selection ... ok
Test whether the relative univariate feature selection ... ok
Test whether the relative univariate feature selection ... ok
Test whether k="all" correctly returns all features. ... ok
Test whether the relative univariate feature selection ... ok
Test whether the relative univariate feature selection ... ok
Test whether the relative univariate feature selection ... ok
Test whether the relative univariate feature selection ... ok
Test whether the relative univariate feature selection ... ok
sklearn.feature_selection.tests.test_feature_select.test_invalid_percentile ... ok
Test whether the relative univariate feature selection ... ok
Test whether the relative univariate feature selection ... ok
Test whether the relative univariate feature selection ... ok
Test whether the relative univariate feature selection ... ok
Test whether SelectKBest actually selects k features in case of ties. ... ok
Test if SelectPercentile selects the right n_features in case of ties. ... ok
Test whether k-best and percentiles work with tied pvalues from chi2. ... ok
Assert that SelectKBest and SelectPercentile can handle NaNs. ... ok
sklearn.feature_selection.tests.test_feature_select.test_score_func_error ... ok
sklearn.feature_selection.tests.test_from_model.test_transform_linear_model ... ok
sklearn.feature_selection.tests.test_from_model.test_invalid_input ... ok
sklearn.feature_selection.tests.test_rfe.test_rfe_set_params ... ok
sklearn.feature_selection.tests.test_rfe.test_rfe ... ok
sklearn.feature_selection.tests.test_rfe.test_rfecv ... ok
Doctest: sklearn.gaussian_process.gaussian_process.GaussianProcess ... ok
MLE estimation of a one-dimensional Gaussian Process model. ... ok
MLE estimation of a two-dimensional Gaussian Process model accounting for ... ok
sklearn.gaussian_process.tests.test_gaussian_process.test_wrong_number_of_outputs ... ok
Repeat test_1d and test_2d for several built-in correlation ... ok
Repeat test_1d and test_2d with given regression weights (beta0) for ... ok
sklearn.gaussian_process.tests.test_gaussian_process.test_no_normalize ... ok
Doctest: sklearn.grid_search.GridSearchCV ... ok
Doctest: sklearn.grid_search.IterGrid ... ok
Doctest: sklearn.grid_search.ParameterGrid ... ok
Doctest: sklearn.grid_search.ParameterSampler ... ok
Doctest: sklearn.hmm.GMMHMM ... ok
Doctest: sklearn.hmm.GaussianHMM ... ok
Doctest: sklearn.hmm.MultinomialHMM ... ok
Doctest: sklearn.lda.LDA ... ok
Doctest: sklearn.linear_model.bayes.ARDRegression ... ok
Doctest: sklearn.linear_model.bayes.BayesianRidge ... ok
Doctest: sklearn.linear_model.coordinate_descent.Lasso ... ok
Doctest: sklearn.linear_model.coordinate_descent.LassoCV.path ... ok
Doctest: sklearn.linear_model.coordinate_descent.MultiTaskElasticNet ... ok
Doctest: sklearn.linear_model.coordinate_descent.MultiTaskLasso ... ok
Doctest: sklearn.linear_model.least_angle.Lars ... ok
Doctest: sklearn.linear_model.least_angle.LassoLars ... ok
Doctest: sklearn.linear_model.least_angle.LassoLarsIC ... ok
Doctest: sklearn.linear_model.randomized_l1.RandomizedLasso ... ok
Doctest: sklearn.linear_model.randomized_l1.RandomizedLogisticRegression ... ok
Doctest: sklearn.linear_model.ridge.Ridge ... ok
Doctest: sklearn.linear_model.stochastic_gradient.SGDClassifier ... ok
Doctest: sklearn.linear_model.stochastic_gradient.SGDRegressor ... ok
Test LinearRegression on a simple dataset. ... ok
Test assertions on betas shape. ... ok
Test that linear regression also works with sparse data ... ok
Test multiple-outcome linear regressions ... ok
Test multiple-outcome linear regressions with sparse data ... ok
Test BayesianRidge on diabetes ... SKIP: XFailed Test
Test BayesianRidge on toy ... ok
Test BayesianRegression ARD classifier ... ok
Check that the lasso can handle zero data without crashing ... ok
Test Lasso on a toy example for various values of alpha. ... ok
Test ElasticNet for various parameters of alpha and l1_ratio. ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_lasso_path_return_models_vs_new_return_gives_same_coefficients ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_enet_path ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_path_parameters ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_warm_start ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_lasso_alpha_warning ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_lasso_positive_constraint ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_enet_positive_constraint ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_and_enet ... ok
sklearn.linear_model.tests.test_coordinate_descent.test_enet_multitarget ... ok
Principle of Lars is to keep covariances tied and decreasing ... ok
The same, with precomputed Gram matrix ... ok
Test that lars_path with precomputed Gram and Xy gives the right answer ... ok
Test that Lars gives least square solution at the end ... ok
Test that Lars Lasso gives least square solution at the end ... ok
Check that lars_path is robust to collinearity in input ... ok
Test that the ``return_path=False`` option returns the correct output ... ok
Test that the ``return_path=False`` option with Gram remains correct ... ok
Test that the ``return_path=False`` option with Gram and Xy remains correct ... ok
sklearn.linear_model.tests.test_least_angle.test_singular_matrix ... ok
sklearn.linear_model.tests.test_least_angle.test_rank_deficient_design ... ok
Test that LassoLars and Lasso using coordinate descent give the ... ok
Test that LassoLars and Lasso using coordinate descent give the ... ok
sklearn.linear_model.tests.test_least_angle.test_lasso_lars_path_length ... ok
sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned ... ok
sklearn.linear_model.tests.test_least_angle.test_lars_drop_for_good ... ok
assure that at least some features get added if necessary ... ok
sklearn.linear_model.tests.test_least_angle.test_lars_n_nonzero_coefs ... ok
Assure that estimators receiving multidimensional y do the right thing ... ok
Test the LassoLarsCV object by checking that the optimal alpha ... ok
Test the LassoLarsIC object by checking that ... ok
Simple sanity check on a 2 classes dataset ... ok
Test for appropriate exception on errors ... ok
sklearn.linear_model.tests.test_logistic.test_predict_3_classes ... ok
Test logistic regression with the iris dataset ... ok
Test sparsify and densify members. ... ok
Test that an exception is raised on inconsistent input ... ok
Test that we can write to coef_ and intercept_ ... ok
Test proper NaN handling. ... ok
sklearn.linear_model.tests.test_logistic.test_liblinear_random_state ... ok
sklearn.linear_model.tests.test_omp.test_correct_shapes ... ok
sklearn.linear_model.tests.test_omp.test_correct_shapes_gram ... ok
sklearn.linear_model.tests.test_omp.test_n_nonzero_coefs ... ok
sklearn.linear_model.tests.test_omp.test_tol ... ok
sklearn.linear_model.tests.test_omp.test_with_without_gram ... ok
sklearn.linear_model.tests.test_omp.test_with_without_gram_tol ... ok
sklearn.linear_model.tests.test_omp.test_unreachable_accuracy ... ok
sklearn.linear_model.tests.test_omp.test_bad_input ... ok
sklearn.linear_model.tests.test_omp.test_perfect_signal_recovery ... ok
sklearn.linear_model.tests.test_omp.test_estimator ... ok
sklearn.linear_model.tests.test_omp.test_scaling_with_gram ... ok
sklearn.linear_model.tests.test_omp.test_identical_regressors ... ok
sklearn.linear_model.tests.test_omp.test_swapped_regressors ... ok
sklearn.linear_model.tests.test_omp.test_no_atoms ... ok
sklearn.linear_model.tests.test_omp.test_omp_path ... ok
sklearn.linear_model.tests.test_omp.test_omp_cv ... ok
sklearn.linear_model.tests.test_omp.test_omp_reaches_least_squares ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_classifier_accuracy ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_classifier_partial_fit ... ok
Classifier can be retrained on different labels and features. ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_classifier_correctness ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_classifier_undefined_methods ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_regressor_mse ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_regressor_partial_fit ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_regressor_correctness ... ok
sklearn.linear_model.tests.test_passive_aggressive.test_regressor_undefined_methods ... ok
sklearn.linear_model.tests.test_perceptron.test_perceptron_accuracy ... ok
sklearn.linear_model.tests.test_perceptron.test_perceptron_correctness ... ok
sklearn.linear_model.tests.test_perceptron.test_undefined_methods ... ok
Check lasso stability path ... ok
Check randomized lasso ... ok
Check randomized sparse logistic regression ... ok
Check randomized sparse logistic regression on sparse data ... ok
Ridge regression convergence test using score ... ok
sklearn.linear_model.tests.test_ridge.test_ridge_singular ... ok
sklearn.linear_model.tests.test_ridge.test_ridge_sample_weights ... ok
Test shape of coef_ and intercept_ ... ok
Test intercept with multiple targets GH issue #708 ... ok
Test BayesianRegression ridge classifier ... ok
On alpha=0., Ridge and OLS yield the same solution. ... ok
Tests the ridge object using individual penalties ... ok
sklearn.linear_model.tests.test_ridge.test_dense_sparse ... ok
sklearn.linear_model.tests.test_ridge.test_ridge_cv_sparse_svd ... ok
Test class weights. ... ok
Test class weights for cross validated ridge classifier. ... ok
Test _RidgeCV's store_cv_values attribute. ... ok
Checks coef_init not allowed as model argument (only fit) ... ok
Test class weights for imbalanced data ... ok
Test class weights. ... ok
Test whether clone works ok. ... ok
Test if equal class weights approx. equals no class weights. ... ok
Input format tests. ... ok
Test multiple calls of fit w/ different shaped inputs. ... ok
test_partial_fit_binary (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_partial_fit_equal_fit_constant (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_partial_fit_equal_fit_invscaling (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_partial_fit_equal_fit_optimal (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_partial_fit_exception (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_partial_fit_multiclass (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
Checks coef_init shape for the warm starts ... ok
test_regression_losses (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
Test weights on individual samples ... ok
Checks coef_init and intercept_init shape for for multi-class ... ok
Checks intercept_ shape for the warm starts ... ok
Checks intercept_ shape for the warm starts in binary case ... ok
Checks intercept_ shape consistency for the warm starts ... ok
Check that SGD gives any results :-) ... ok
Target must have at least two labels ... ok
Check whether expected ValueError on bad alpha ... ok
Check whether expected ValueError on bad eta0 ... ok
Check whether expected ValueError on bad l1_ratio ... ok
Check whether expected ValueError on bad learning_rate ... ok
Check whether expected ValueError on bad loss ... ok
Check whether expected ValueError on bad penalty ... ok
Test L1 regularization ... ok
Multi-class test case ... ok
Multi-class test case with multi-core support ... ok
Multi-class test case ... ok
Test parameter validity check ... ok
Check SGD.predict_proba ... ok
Test parameter validity check ... ok
test_warm_start_constant (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_warm_start_invscaling (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_warm_start_multiclass (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
test_warm_start_optimal (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... ok
ValueError due to wrong class_weight argument type. ... ok
ValueError due to not existing class label. ... ok
Test if ValueError is raised if sample_weight has wrong shape ... ok
Check that the SGD output is consistent with coordinate descent ... ok
test_loss_function_epsilon (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_partial_fit (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_partial_fit_equal_fit_constant (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_partial_fit_equal_fit_invscaling (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_partial_fit_equal_fit_optimal (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
Check that SGD gives any results. ... ok
Check whether expected ValueError on bad loss ... ok
Check whether expected ValueError on bad penalty ... ok
test_sgd_epsilon_insensitive (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_sgd_huber_fit (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
test_sgd_least_squares_fit (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... ok
Checks coef_init not allowed as model argument (only fit) ... ok
Test class weights for imbalanced data ... ok
Test class weights. ... ok
Test whether clone works ok. ... ok
Test if equal class weights approx. equals no class weights. ... ok
Input format tests. ... ok
Test multiple calls of fit w/ different shaped inputs. ... ok
test_partial_fit_binary (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_partial_fit_equal_fit_constant (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_partial_fit_equal_fit_invscaling (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_partial_fit_equal_fit_optimal (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_partial_fit_exception (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_partial_fit_multiclass (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
Checks coef_init shape for the warm starts ... ok
test_regression_losses (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
Test weights on individual samples ... ok
Checks coef_init and intercept_init shape for for multi-class ... ok
Checks intercept_ shape for the warm starts ... ok
Checks intercept_ shape for the warm starts in binary case ... ok
Checks intercept_ shape consistency for the warm starts ... ok
Check that SGD gives any results :-) ... ok
Target must have at least two labels ... ok
Check whether expected ValueError on bad alpha ... ok
Check whether expected ValueError on bad eta0 ... ok
Check whether expected ValueError on bad l1_ratio ... ok
Check whether expected ValueError on bad learning_rate ... ok
Check whether expected ValueError on bad loss ... ok
Check whether expected ValueError on bad penalty ... ok
Test L1 regularization ... ok
Multi-class test case ... ok
Multi-class test case with multi-core support ... ok
Multi-class test case ... ok
Test parameter validity check ... ok
Check SGD.predict_proba ... ok
Test parameter validity check ... ok
test_warm_start_constant (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_warm_start_invscaling (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_warm_start_multiclass (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
test_warm_start_optimal (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok
ValueError due to wrong class_weight argument type. ... ok
ValueError due to not existing class label. ... ok
Test if ValueError is raised if sample_weight has wrong shape ... ok
Check that the SGD output is consistent with coordinate descent ... ok
test_loss_function_epsilon (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_partial_fit (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_partial_fit_equal_fit_constant (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_partial_fit_equal_fit_invscaling (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_partial_fit_equal_fit_optimal (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
Check that SGD gives any results. ... ok
Check whether expected ValueError on bad loss ... ok
Check whether expected ValueError on bad penalty ... ok
test_sgd_epsilon_insensitive (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_sgd_huber_fit (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
test_sgd_least_squares_fit (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... ok
Check that the sparse_coef propery works ... ok
Check that the normalize option in enet works ... ok
Check that the sparse lasso can handle zero data without crashing ... ok
Test ElasticNet for various values of alpha and l1_ratio with list X ... ok
Test ElasticNet for various values of alpha and l1_ratio with sparse ... ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_enet_not_as_toy_dataset ... ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_lasso_not_as_toy_dataset ... ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_multitarget ... ok
sklearn.linear_model.tests.test_sparse_coordinate_descent.test_path_parameters ... ok
test_isomap.test_isomap_simple_grid ... ok
test_isomap.test_isomap_reconstruction_error ... ok
test_isomap.test_transform ... ok
test_isomap.test_pipeline ... ok
test_locally_linear.test_barycenter_kneighbors_graph ... ok
test_locally_linear.test_lle_simple_grid ... ok
test_locally_linear.test_lle_manifold ... ok
test_locally_linear.test_pipeline ... ok
test_locally_linear.test_singular_matrix ... ok
test_mds.test_smacof ... ok
test_mds.test_smacof_error ... ok
test_mds.test_MDS ... ok
Test spectral embedding with two components ... ok
Test spectral embedding with precomputed kernel ... ok
Test spectral embedding with callable affinity ... ok
Test spectral embedding with amg solver ... SKIP
Test using pipeline to do spectral clustering ... ok
Test that SpectralClustering fails with an unknown eigensolver ... ok
Test that SpectralClustering fails with an unknown affinity type ... ok
Test that graph connectivity test works as expected ... ok
sklearn.metrics.cluster.bicluster.tests.test_bicluster_metrics.test_jaccard ... ok
sklearn.metrics.cluster.bicluster.tests.test_bicluster_metrics.test_consensus_score ... ok
Doctest: sklearn.metrics.cluster.supervised.adjusted_mutual_info_score ... ok
Doctest: sklearn.metrics.cluster.supervised.adjusted_rand_score ... ok
Doctest: sklearn.metrics.cluster.supervised.completeness_score ... ok
Doctest: sklearn.metrics.cluster.supervised.homogeneity_score ... ok
Doctest: sklearn.metrics.cluster.supervised.normalized_mutual_info_score ... ok
Doctest: sklearn.metrics.cluster.supervised.v_measure_score ... ok
sklearn.metrics.cluster.tests.test_supervised.test_error_messages_on_wrong_input ... ok
sklearn.metrics.cluster.tests.test_supervised.test_perfect_matches ... ok
sklearn.metrics.cluster.tests.test_supervised.test_homogeneous_but_not_complete_labeling ... ok
sklearn.metrics.cluster.tests.test_supervised.test_complete_but_not_homogeneous_labeling ... ok
sklearn.metrics.cluster.tests.test_supervised.test_not_complete_and_not_homogeneous_labeling ... ok
sklearn.metrics.cluster.tests.test_supervised.test_non_consicutive_labels ... ok
Check that adjusted scores are almost zero on random labels ... ok
Compute the Adjusted Mutual Information and test against known values ... ok
sklearn.metrics.cluster.tests.test_supervised.test_entropy ... ok
sklearn.metrics.cluster.tests.test_supervised.test_contingency_matrix ... ok
Check numerical stabability when information is exactly zero ... ok
Check relation between v_measure, entropy and mutual information ... ok
Tests the Silhouette Coefficient. ... ok
Assert Silhouette Coefficient != nan when there is 1 sample in a class. ... ok
Doctest: sklearn.metrics.metrics._tp_tn_fp_fn ... ok
Doctest: sklearn.metrics.metrics.accuracy_score ... ok
Doctest: sklearn.metrics.metrics.auc ... ok
Doctest: sklearn.metrics.metrics.auc_score ... ok
Doctest: sklearn.metrics.metrics.average_precision_score ... ok
Doctest: sklearn.metrics.metrics.classification_report ... ok
Doctest: sklearn.metrics.metrics.confusion_matrix ... ok
Doctest: sklearn.metrics.metrics.explained_variance_score ... ok
Doctest: sklearn.metrics.metrics.f1_score ... ok
Doctest: sklearn.metrics.metrics.fbeta_score ... ok
Doctest: sklearn.metrics.metrics.hamming_loss ... ok
Doctest: sklearn.metrics.metrics.hinge_loss ... ok
Doctest: sklearn.metrics.metrics.jaccard_similarity_score ... ok
Doctest: sklearn.metrics.metrics.log_loss ... ok
Doctest: sklearn.metrics.metrics.matthews_corrcoef ... ok
Doctest: sklearn.metrics.metrics.mean_absolute_error ... ok
Doctest: sklearn.metrics.metrics.mean_squared_error ... ok
Doctest: sklearn.metrics.metrics.precision_recall_curve ... ok
Doctest: sklearn.metrics.metrics.precision_recall_fscore_support ... ok
Doctest: sklearn.metrics.metrics.precision_score ... ok
Doctest: sklearn.metrics.metrics.r2_score ... ok
Doctest: sklearn.metrics.metrics.recall_score ... ok
Doctest: sklearn.metrics.metrics.roc_curve ... ok
Doctest: sklearn.metrics.metrics.zero_one_loss ... ok
Doctest: sklearn.metrics.pairwise.euclidean_distances ... ok
Doctest: sklearn.metrics.pairwise.manhattan_distances ... ok
Doctest: sklearn.metrics.scorer.make_scorer ... ok
Test Area under Receiver Operating Characteristic (ROC) curve ... ok
sklearn.metrics.tests.test_metrics.test_roc_curve_end_points ... ok
Test whether the returned threshold matches up with tpr ... ok
roc_curve not applicable for multi-class problems ... ok
roc_curve for confidence scores ... ok
roc_curve for hard decisions ... ok
sklearn.metrics.tests.test_metrics.test_roc_curve_one_label ... ok
Test Area Under Curve (AUC) computation ... ok
sklearn.metrics.tests.test_metrics.test_auc_duplicate_values ... ok
sklearn.metrics.tests.test_metrics.test_auc_errors ... ok
Test that auc_score function returns an error when trying to compute AUC ... ok
Test Precision Recall and F1 Score for binary classification task ... ok
Test precision, recall and F1 score behave with a single positive or ... ok
sklearn.metrics.tests.test_metrics.test_average_precision_score_duplicate_values ... ok
sklearn.metrics.tests.test_metrics.test_average_precision_score_tied_values ... ok
sklearn.metrics.tests.test_metrics.test_precision_recall_fscore_support_errors ... ok
Test confusion matrix - binary classification case ... ok
sklearn.metrics.tests.test_metrics.test_matthews_corrcoef_nan ... ok
Test Precision Recall and F1 Score for multiclass classification task ... ok
Test Precision Recall and F1 Score for multiclass classification task ... ok
Check that pathological cases do not bring NaNs ... ok
Test confusion matrix - multi-class case ... ok
Test confusion matrix - multi-class case with subset of labels ... ok
Test performance report ... ok
sklearn.metrics.tests.test_metrics.test_classification_report_multiclass_with_string_label ... ok
sklearn.metrics.tests.test_metrics.test_multilabel_classification_report ... ok
sklearn.metrics.tests.test_metrics.test_precision_recall_curve ... ok
sklearn.metrics.tests.test_metrics.test_precision_recall_curve_errors ... ok
sklearn.metrics.tests.test_metrics.test_score_scale_invariance ... ok
Test loss functions ... ok
sklearn.metrics.tests.test_metrics.test_losses_at_limits ... ok
sklearn.metrics.tests.test_metrics.test_r2_one_case_error ... ok
Test the symmetry of score and loss functions ... ok
sklearn.metrics.tests.test_metrics.test_sample_order_invariance ... ok
sklearn.metrics.tests.test_metrics.test_format_invariance_with_1d_vectors ... ok
Ensure that classification metrics with string labels ... ok
Non-regression test: scores should work with a single sample. ... ok
sklearn.metrics.tests.test_metrics.test_hinge_loss_binary ... ok
sklearn.metrics.tests.test_metrics.test_multioutput_regression ... ok
sklearn.metrics.tests.test_metrics.test_multioutput_number_of_output_differ ... ok
sklearn.metrics.tests.test_metrics.test_multioutput_regression_invariance_to_dimension_shuffling ... ok
sklearn.metrics.tests.test_metrics.test_multilabel_representation_invariance ... ok
sklearn.metrics.tests.test_metrics.test_multilabel_zero_one_loss_subset ... ok
sklearn.metrics.tests.test_metrics.test_multilabel_hamming_loss ... ok
sklearn.metrics.tests.test_metrics.test_multilabel_accuracy_score_subset_accuracy ... ok
sklearn.metrics.tests.test_metrics.test_multilabel_jaccard_similarity_score ... ok
sklearn.metrics.tests.test_metrics.test_normalize_option_binary_classification ... ok
sklearn.metrics.tests.test_metrics.test_normalize_option_multiclasss_classification ... ok
sklearn.metrics.tests.test_metrics.test_normalize_option_multilabel_classification ... ok
Test precision_recall_f1_score on a crafted multilabel example ... ok
Test precision_recall_f1_score on a crafted multilabel example 2 ... ok
sklearn.metrics.tests.test_metrics.test_precision_recall_f1_score_with_an_empty_prediction ... ok
sklearn.metrics.tests.test_metrics.test_precision_recall_f1_no_labels ... ok
Check that _check_clf_targets correctly merges target types, squeezes ... ok
sklearn.metrics.tests.test_metrics.test__check_reg_targets ... ok
sklearn.metrics.tests.test_metrics.test_log_loss ... ok
Test the pairwise_distance helper function. ... ok
sklearn.metrics.tests.test_pairwise.test_pairwise_parallel ... ok
Test the pairwise_kernels helper function. ... ok
sklearn.metrics.tests.test_pairwise.test_pairwise_kernels_filter_param ... ok
Check the pairwise Euclidean distances computation ... ok
sklearn.metrics.tests.test_pairwise.test_chi_square_kernel ... ok
Valid kernels should be symmetric ... ok
sklearn.metrics.tests.test_pairwise.test_kernel_sparse ... ok
sklearn.metrics.tests.test_pairwise.test_linear_kernel ... ok
sklearn.metrics.tests.test_pairwise.test_rbf_kernel ... ok
Test the cosine_similarity. ... ok
Ensure that pairwise array check works for dense matrices. ... ok
Ensure that if XA and XB are given correctly, they return as equal. ... ok
Ensure an error is raised if the dimensions are different. ... ok
Ensure an error is raised on 1D input arrays. ... ok
Ensures that checks return valid sparse matrices. ... ok
Ensures that checks return valid tuples. ... ok
Ensures that type float32 is preserved. ... ok
Sanity check on the make_scorer factory function. ... ok
Test classification scorers. ... ok
Test regression scorers. ... ok
Test scorers that take thresholds. ... ok
Test clustering scorers against gold standard labeling. ... ok
Test that when a list of scores is returned, we raise proper errors. ... ok
Doctest: sklearn.mixture.gmm.GMM ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... ok
Train on 1-D data ... ok
Train on degenerate data with 0 in some dimensions ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... ok
Train on 1-D data ... ok
Train on degenerate data with 0 in some dimensions ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... ok
Train on 1-D data ... ok
Train on degenerate data with 0 in some dimensions ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... ok
Train on 1-D data ... ok
Train on degenerate data with 0 in some dimensions ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... ok
Train on 1-D data ... ok
Train on degenerate data with 0 in some dimensions ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... ok
Train on 1-D data ... ok
Train on degenerate data with 0 in some dimensions ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... ok
Train on 1-D data ... ok
Train on degenerate data with 0 in some dimensions ... ok
test_eval (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... ok
test_sample (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... ok
test_train (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... ok
Train on 1-D data ... ok
Train on degenerate data with 0 in some dimensions ... ok
sklearn.mixture.tests.test_dpgmm.test_class_weights ... ok
sklearn.mixture.tests.test_dpgmm.test_log_normalize ... ok
test_eval (sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars) ... ok
test_sample (sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars) ... ok
test_train (sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars) ... ok
Train on 1-D data ... ok
Train on degenerate data with 0 in some dimensions ... ok
test_eval (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... ok
test_sample (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... ok
test_train (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... ok
Train on 1-D data ... ok
Train on degenerate data with 0 in some dimensions ... ok
test_eval (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... ok
test_sample (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... ok
test_train (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... ok
Train on 1-D data ... ok
Train on degenerate data with 0 in some dimensions ... ok
test_eval (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... ok
test_sample (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... ok
test_train (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... ok
Train on 1-D data ... ok
Train on degenerate data with 0 in some dimensions ... ok
Test sample generation from mixture.sample_gaussian where covariance ... ok
test a slow and naive implementation of lmvnpdf and ... ok
sklearn.mixture.tests.test_gmm.test_lmvnpdf_spherical ... ok
sklearn.mixture.tests.test_gmm.test_lmvnpdf_full ... ok
sklearn.mixture.tests.test_gmm.test_GMM_attributes ... ok
Test that multiple inits does not much worse than a single one ... ok
Test that the right number of parameters is estimated ... ok
Test the aic and bic criteria ... ok
Doctest: sklearn.naive_bayes.BernoulliNB ... ok
Doctest: sklearn.naive_bayes.GaussianNB ... ok
Doctest: sklearn.naive_bayes.MultinomialNB ... ok
Doctest: sklearn.neighbors.base.KNeighborsMixin.kneighbors ... ok
Doctest: sklearn.neighbors.base.KNeighborsMixin.kneighbors_graph ... ok
Doctest: sklearn.neighbors.base.RadiusNeighborsMixin.radius_neighbors ... ok
Doctest: sklearn.neighbors.base.RadiusNeighborsMixin.radius_neighbors_graph ... ok
Doctest: sklearn.neighbors.classification.KNeighborsClassifier ... ok
Doctest: sklearn.neighbors.classification.RadiusNeighborsClassifier ... ok
Doctest: sklearn.neighbors.graph.kneighbors_graph ... ok
Doctest: sklearn.neighbors.graph.radius_neighbors_graph ... ok
Doctest: sklearn.neighbors.nearest_centroid.NearestCentroid ... ok
Doctest: sklearn.neighbors.regression.KNeighborsRegressor ... ok
Doctest: sklearn.neighbors.regression.RadiusNeighborsRegressor ... ok
Doctest: sklearn.neighbors.unsupervised.NearestNeighbors ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'seuclidean', {'V': array([ 0.98513284,  0.93244048,  0.57187922])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'seuclidean', {'V': array([ 0.98513284,  0.93244048,  0.57187922])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'seuclidean', {'V': array([ 0.98513284,  0.93244048,  0.57187922])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'seuclidean', {'V': array([ 0.98513284,  0.93244048,  0.57187922])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'seuclidean', {'V': array([ 0.98513284,  0.93244048,  0.57187922])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'seuclidean', {'V': array([ 0.98513284,  0.93244048,  0.57187922])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'seuclidean', {'V': array([ 0.98513284,  0.93244048,  0.57187922])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'seuclidean', {'V': array([ 0.98513284,  0.93244048,  0.57187922])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'seuclidean', {'V': array([ 0.98513284,  0.93244048,  0.57187922])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'seuclidean', {'V': array([ 0.98513284,  0.93244048,  0.57187922])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'seuclidean', {'V': array([ 0.98513284,  0.93244048,  0.57187922])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'seuclidean', {'V': array([ 0.98513284,  0.93244048,  0.57187922])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'wminkowski', {'p': 3, 'w': array([ 0.35081659,  0.23738684,  0.67577161])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'wminkowski', {'p': 3, 'w': array([ 0.35081659,  0.23738684,  0.67577161])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'wminkowski', {'p': 3, 'w': array([ 0.35081659,  0.23738684,  0.67577161])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'wminkowski', {'p': 3, 'w': array([ 0.35081659,  0.23738684,  0.67577161])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'wminkowski', {'p': 3, 'w': array([ 0.35081659,  0.23738684,  0.67577161])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'wminkowski', {'p': 3, 'w': array([ 0.35081659,  0.23738684,  0.67577161])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'wminkowski', {'p': 3, 'w': array([ 0.35081659,  0.23738684,  0.67577161])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'wminkowski', {'p': 3, 'w': array([ 0.35081659,  0.23738684,  0.67577161])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'wminkowski', {'p': 3, 'w': array([ 0.35081659,  0.23738684,  0.67577161])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'wminkowski', {'p': 3, 'w': array([ 0.35081659,  0.23738684,  0.67577161])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'wminkowski', {'p': 3, 'w': array([ 0.35081659,  0.23738684,  0.67577161])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'wminkowski', {'p': 3, 'w': array([ 0.35081659,  0.23738684,  0.67577161])}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('matching',) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('jaccard',) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('dice',) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('kulsinski',) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('rogerstanimoto',) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('russellrao',) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('sokalmichener',) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('sokalsneath',) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_discrete_metrics('hamming',) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_discrete_metrics('canberra',) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_discrete_metrics('braycurtis',) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_radius ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_radius_distance ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 0.01, 1e-05, False) ... ok
Compare gaussian KDE results to scipy.stats.gaussian_kde ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_two_point(array([ 0.        ,  0.11111111,  0.22222222,  0.33333333,  0.44444444, ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_two_point(array([ 0.        ,  0.11111111,  0.22222222,  0.33333333,  0.44444444, ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_pickle(0,) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_pickle(1,) ... ok
sklearn.neighbors.tests.test_ball_tree.test_ball_tree_pickle(2,) ... ok
sklearn.neighbors.tests.test_ball_tree.test_neighbors_heap ... ok
sklearn.neighbors.tests.test_ball_tree.test_node_heap ... ok
sklearn.neighbors.tests.test_ball_tree.test_simultaneous_sort ... ok
sklearn.neighbors.tests.test_ball_tree.test_query_haversine ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('chebyshev', {}, array([[ 0.53861588,  0.45094267,  0.28419442,  0.41701564,  0.69508182, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('euclidean', {}, array([[ 0.67507694,  0.64211239,  0.37730269,  0.63475751,  0.9096805 , ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('wminkowski', {'p': 1, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}, array([[ 0.51149072,  0.42978945,  0.28691315,  0.31414856,  0.67822857, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('wminkowski', {'p': 1.5, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}, array([[ 0.35478506,  0.34649572,  0.21080154,  0.22142038,  0.53671639, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('wminkowski', {'p': 3, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}, array([[ 0.26214981,  0.3151016 ,  0.16585854,  0.16045352,  0.48619498, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('canberra', {}, array([[ 1.45964409,  1.25116805,  0.56385105,  1.46151151,  2.11940325, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('hamming', {}, array([[ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1., ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('minkowski', {'p': 1}, array([[ 1.21796151,  0.99804582,  0.64796144,  1.09320258,  1.49914561, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('minkowski', {'p': 1.5}, array([[ 0.8092389 ,  0.73433834,  0.44607985,  0.75978393,  1.06004733, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('minkowski', {'p': 2}, array([[ 0.67507694,  0.64211239,  0.37730269,  0.63475751,  0.9096805 , ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('minkowski', {'p': 3}, array([[ 0.58384805,  0.56795898,  0.32594322,  0.53204405,  0.79637583, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('cityblock', {}, array([[ 1.21796151,  0.99804582,  0.64796144,  1.09320258,  1.49914561, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('seuclidean', {'V': array([ 0.22741463,  0.25435648,  0.05802916,  0.43441663])}, array([[ 2.37482514,  1.1721197 ,  1.26879784,  1.66071271,  1.85983097, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('mahalanobis', {'VI': array([[ 0.80314541,  0.98494408,  0.59389881,  1.16113843], ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('braycurtis', {}, array([[ 0.31225657,  0.25850558,  0.13215958,  0.29289755,  0.38919585, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('matching', array([[ 0.75,  0.5 ,  0.25,  0.75,  0.5 ,  0.25,  0.25,  0.5 ,  0.5 , ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('jaccard', array([[ 0.75      ,  0.5       ,  0.25      ,  0.75      ,  0.5       , ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('dice', array([[ 0.6       ,  0.33333333,  0.14285714,  0.6       ,  0.33333333, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('kulsinski', array([[ 0.85714286,  0.66666667,  0.4       ,  0.85714286,  0.66666667, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('rogerstanimoto', array([[ 0.85714286,  0.66666667,  0.4       ,  0.85714286,  0.66666667, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('russellrao', array([[ 0.75,  0.5 ,  0.25,  0.75,  0.5 ,  0.25,  0.25,  0.5 ,  0.5 , ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('sokalmichener', array([[ 0.85714286,  0.66666667,  0.4       ,  0.85714286,  0.66666667, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('sokalsneath', array([[ 0.85714286,  0.66666667,  0.4       ,  0.85714286,  0.66666667, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('chebyshev', {}, array([[ 0.        ,  0.34688982,  0.41484926,  0.53172732,  0.52859511, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('euclidean', {}, array([[ 0.        ,  0.40997835,  0.5640201 ,  0.73274389,  0.65549553, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('wminkowski', {'p': 1, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}, array([[ 0.        ,  0.21197555,  0.43461091,  0.43558715,  0.37123525, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('wminkowski', {'p': 1.5, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}, array([[ 0.        ,  0.13471566,  0.31498027,  0.30704769,  0.24525516, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('wminkowski', {'p': 3, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}, array([[ 0.        ,  0.08691326,  0.24582898,  0.2276954 ,  0.1766636 , ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('canberra', {}, array([[ 0.        ,  0.57984003,  0.72664541,  1.65888213,  1.36160847, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('hamming', {}, array([[ 0.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1., ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('minkowski', {'p': 1}, array([[ 0.        ,  0.70651994,  0.95154703,  1.21911953,  1.14654793, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('minkowski', {'p': 1.5}, array([[ 0.        ,  0.48135148,  0.66512238,  0.85934453,  0.77585798, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('minkowski', {'p': 2}, array([[ 0.        ,  0.40997835,  0.5640201 ,  0.73274389,  0.65549553, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('minkowski', {'p': 3}, array([[ 0.        ,  0.36478684,  0.48581161,  0.63461015,  0.57396051, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('cityblock', {}, array([[ 0.        ,  0.70651994,  0.95154703,  1.21911953,  1.14654793, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('seuclidean', {'V': array([ 0.22741463,  0.25435648,  0.05802916,  0.43441663])}, array([[ 0.        ,  0.91374016,  1.34363768,  2.35165824,  1.43398969, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('mahalanobis', {'VI': array([[ 0.80314541,  0.98494408,  0.59389881,  1.16113843], ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('braycurtis', {}, array([[ 0.        ,  0.14686859,  0.1873355 ,  0.30002036,  0.23338654, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('matching', array([[ 0.  ,  0.5 ,  0.25,  0.5 ,  0.25,  0.25,  0.5 ,  0.5 ,  0.5 , ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('jaccard', array([[ 0.        ,  0.5       ,  0.25      ,  0.5       ,  0.25      , ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('dice', array([[ 0.        ,  0.33333333,  0.14285714,  0.33333333,  0.14285714, ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('kulsinski', array([[ 0.        ,  0.66666667,  0.4       ,  0.66666667,  0.4       , ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('rogerstanimoto', array([[ 0.        ,  0.66666667,  0.4       ,  0.66666667,  0.4       , ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('russellrao', array([[ 0.  ,  0.5 ,  0.25,  0.5 ,  0.25,  0.25,  0.5 ,  0.5 ,  0.5 , ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('sokalmichener', array([[ 0.        ,  0.66666667,  0.4       ,  0.66666667,  0.4       , ... ok
sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('sokalsneath', array([[ 0.        ,  0.66666667,  0.4       ,  0.66666667,  0.4       , ... ok
sklearn.neighbors.tests.test_dist_metrics.test_haversine_metric ... ok
sklearn.neighbors.tests.test_dist_metrics.test_pyfunc_metric ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 1, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 1, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 1, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 1, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 3, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 3, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 3, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 3, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 5, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 5, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 5, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 5, 'chebyshev', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 1, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 1, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 1, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 1, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 3, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 3, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 3, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 3, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 5, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 5, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 5, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 5, 'euclidean', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 1, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 1, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 1, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 1, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 3, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 3, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 3, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 3, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 5, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 5, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 5, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 5, 'manhattan', {}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 1, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 1, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 1, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 1, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 3, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 3, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 3, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 3, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 5, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 5, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 5, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 5, 'minkowski', {'p': 3}) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query_radius ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query_radius_distance ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 0.01, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 1e-06, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 1e-06, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 0.01, 0, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 0.01, 0, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 1e-06, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 1e-06, 1e-05, False) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 0.01, 1e-05, True) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 0.01, 1e-05, False) ... ok
Compare gaussian KDE results to scipy.stats.gaussian_kde ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_two_point(array([ 0.        ,  0.11111111,  0.22222222,  0.33333333,  0.44444444, ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_two_point(array([ 0.        ,  0.11111111,  0.22222222,  0.33333333,  0.44444444, ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_pickle(0,) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_pickle(1,) ... ok
sklearn.neighbors.tests.test_kd_tree.test_kd_tree_pickle(2,) ... ok
sklearn.neighbors.tests.test_kd_tree.test_neighbors_heap ... ok
sklearn.neighbors.tests.test_kd_tree.test_node_heap ... ok
sklearn.neighbors.tests.test_kd_tree.test_simultaneous_sort ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 1e-06, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 0.01, 0) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 1e-06, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 0.01, 1e-05) ... ok
sklearn.neighbors.tests.test_kde.test_kernel_density_sampling ... ok
Smoke test for various metrics and algorithms ... ok
sklearn.neighbors.tests.test_kde.test_kde_score ... ok
sklearn.neighbors.tests.test_kde.test_kde_badargs ... ok
Check classification on a toy dataset, including sparse versions. ... ok
sklearn.neighbors.tests.test_nearest_centroid.test_precomputed ... ok
Check consistency on dataset iris. ... ok
Check consistency on dataset iris, when using shrinkage. ... ok
sklearn.neighbors.tests.test_nearest_centroid.test_pickle ... ok
Test unsupervised neighbors methods ... ok
test the types of valid input into NearestNeighbors ... ok
Test unsupervised radius-based query ... ok
Test k-neighbors classification ... ok
Test k-neighbors classification ... ok
Test KNeighborsClassifier.predict_proba() method ... ok
Test radius-based classification ... ok
Test radius-based classifier when no neighbors found. ... ok
Test radius-based classifier when no neighbors found and outliers ... ok
Test radius-based classifier, when distance to a sample is zero. ... ok
Test k-NN classifier on multioutput data ... ok
Test k-NN classifier on sparse matrices ... ok
Test k-NN classifier on multioutput data ... ok
Test k-neighbors regression ... ok
Test k-neighbors in multi-output regression with uniform weight ... ok
Test k-neighbors in multi-output regression ... ok
Test radius-based neighbors regression ... ok
Test radius neighbors in multi-output regression (uniform weight) ... ok
Test k-neighbors in multi-output regression with various weight ... ok
Test radius-based regression on sparse matrices ... ok
Sanity checks on the iris dataset ... ok
Sanity check on the digits dataset ... ok
Test kneighbors_graph to build the k-Nearest Neighbor graph. ... ok
Test kneighbors_graph to build the k-Nearest Neighbor graph ... ok
Test radius_neighbors_graph to build the Nearest Neighbor graph. ... ok
Test radius_neighbors_graph to build the Nearest Neighbor graph ... ok
Test bad argument values: these should all raise ValueErrors ... ok
Test that passing the deprecated parameter will cause a ... ok
Test computing the neighbors for various metrics ... ok
sklearn.neighbors.tests.test_neighbors.test_callable_metric ... ok
Doctest: sklearn.neural_network.rbm.BernoulliRBM ... ok
test_rbm.test_fit ... ok
test_rbm.test_transform ... ok
test_rbm.test_sample_hiddens ... ok
Gibbs on the RBM hidden layer should be able to recreate [[0], [1]] ... ok
Gibbs on the RBM hidden layer should be able to recreate [[0], [1]] from ... ok
just seek if we don't get NaNs sampling the full digits dataset ... ok
Check that the pseudo likelihood is computed without clipping. ... ok
test_rbm.test_rbm_verbose ... ok
Doctest: sklearn.pipeline.Pipeline ... ok
Doctest: sklearn.preprocessing.data.OneHotEncoder ... ok
Doctest: sklearn.preprocessing.data.add_dummy_feature ... ok
Doctest: sklearn.preprocessing.label.LabelBinarizer ... ok
Doctest: sklearn.preprocessing.label.LabelEncoder ... ok
Doctest: sklearn.preprocessing.label.label_binarize ... ok
Test scaling of dataset along single axis ... ok
Test scaling of 2d array along first axis ... ok
sklearn.preprocessing.tests.test_data.test_min_max_scaler_iris ... ok
Check min max scaler on toy data with zero variance features ... ok
sklearn.preprocessing.tests.test_data.test_scaler_without_centering ... ok
sklearn.preprocessing.tests.test_data.test_scaler_int ... ok
Check that StandardScaler.fit does not change input ... ok
sklearn.preprocessing.tests.test_data.test_scale_sparse_with_mean_raise_exception ... ok
sklearn.preprocessing.tests.test_data.test_scale_function_without_centering ... ok
Check warning when scaling integer data ... ok
sklearn.preprocessing.tests.test_data.test_normalizer_l1 ... ok
sklearn.preprocessing.tests.test_data.test_normalizer_l2 ... ok
Check that invalid arguments yield ValueError ... ok
sklearn.preprocessing.tests.test_data.test_binarizer ... ok
Test that KernelCenterer is equivalent to StandardScaler ... ok
sklearn.preprocessing.tests.test_data.test_fit_transform ... ok
sklearn.preprocessing.tests.test_data.test_add_dummy_feature ... ok
sklearn.preprocessing.tests.test_data.test_add_dummy_feature_coo ... ok
sklearn.preprocessing.tests.test_data.test_add_dummy_feature_csc ... ok
sklearn.preprocessing.tests.test_data.test_add_dummy_feature_csr ... ok
Test OneHotEncoder's fit and transform. ... ok
sklearn.preprocessing.tests.test_data.test_transform_selected ... ok
sklearn.preprocessing.tests.test_data.test_one_hot_encoder_categorical_features ... ok
Test imputation using the mean and median strategies, when ... ok
Test imputation using the mean and median strategies, when ... ok
Test imputation using the most-frequent strategy. ... ok
Test imputation within a pipeline + gridsearch. ... ok
Test for pickling imputers. ... ok
Test imputation with copy=True. ... ok
sklearn.preprocessing.tests.test_label.test_label_binarizer ... ok
sklearn.preprocessing.tests.test_label.test_label_binarizer_column_y ... ok
sklearn.preprocessing.tests.test_label.test_label_binarizer_set_label_encoding ... ok
sklearn.preprocessing.tests.test_label.test_label_binarizer_multilabel ... ok
Check that invalid arguments yield ValueError ... ok
Test LabelEncoder's transform and inverse_transform methods ... ok
Test fit_transform ... ok
Test LabelEncoder's transform and inverse_transform methods with ... ok
Check that invalid arguments yield ValueError ... ok
sklearn.preprocessing.tests.test_label.test_label_binarizer_iris ... ok
Check that LabelBinarizer can handle an unlabeled sample ... ok
Doctest: sklearn.qda.QDA ... ok
Doctest: sklearn.random_projection.johnson_lindenstrauss_min_dim ... ok
Doctest: sklearn.semi_supervised.label_propagation ... ok
Doctest: sklearn.semi_supervised.label_propagation.LabelPropagation ... ok
Doctest: sklearn.semi_supervised.label_propagation.LabelSpreading ... ok
sklearn.semi_supervised.tests.test_label_propagation.test_fit_transduction ... ok
sklearn.semi_supervised.tests.test_label_propagation.test_distribution ... ok
sklearn.semi_supervised.tests.test_label_propagation.test_predict ... ok
sklearn.semi_supervised.tests.test_label_propagation.test_predict_proba ... ok
Doctest: sklearn.svm.classes.NuSVC ... ok
Doctest: sklearn.svm.classes.NuSVR ... ok
Doctest: sklearn.svm.classes.SVC ... ok
Doctest: sklearn.svm.classes.SVR ... ok
Test l1_min_c loss='l2' dense multi-class no-intercept ... ok
Test l1_min_c loss='l2' dense multi-class fit-intercept ... ok
Test l1_min_c loss='l2' dense two-classes no-intercept ... ok
Test l1_min_c loss='l2' dense two-classes fit-intercept ... ok
Test l1_min_c loss='l2' sparse multi-class no-intercept ... ok
Test l1_min_c loss='l2' sparse multi-class fit-intercept ... ok
Test l1_min_c loss='l2' sparse two-classes no-intercept ... ok
Test l1_min_c loss='l2' sparse two-classes fit-intercept ... ok
Test l1_min_c loss='log' dense multi-class no-intercept ... ok
Test l1_min_c loss='log' dense multi-class fit-intercept ... ok
Test l1_min_c loss='log' dense two-classes no-intercept ... ok
Test l1_min_c loss='log' dense two-classes fit-intercept ... ok
Test l1_min_c loss='log' sparse multi-class no-intercept ... ok
Test l1_min_c loss='log' sparse multi-class fit-intercept ... ok
Test l1_min_c loss='log' sparse two-classes no-intercept ... ok
Test l1_min_c loss='log' sparse two-classes fit-intercept ... ok
sklearn.svm.tests.test_bounds.test_ill_posed_min_c ... ok
sklearn.svm.tests.test_bounds.test_unsupported_loss ... ok
Check that sparse SVC gives the same result as SVC ... ok
sklearn.svm.tests.test_sparse.test_unsorted_indices ... ok
sklearn.svm.tests.test_sparse.test_svc_with_custom_kernel ... ok
Test the sparse SVC with the iris dataset ... ok
Test that it gives proper exception on deficient input ... ok
Similar to test_SVC ... ok
Test the sparse LinearSVC with the iris dataset ... ok
Test class weights ... ok
Test weights on individual samples ... ok
Test that sparse liblinear honours intercept_scaling param ... ok
Test on a subset from the 20newsgroups dataset. ... ok
sklearn.svm.tests.test_sparse.test_sparse_svc_clone_with_callable_kernel ... ok
sklearn.svm.tests.test_sparse.test_timeout ... ok
sklearn.svm.tests.test_sparse.test_consistent_proba ... ok
Test parameters on classes that make use of libsvm. ... ok
Check consistency on dataset iris. ... ok
Test whether SVCs work on a single sample given as a 1-d array ... ok
SVC with a precomputed kernel. ... ok
Test Support Vector Regression ... ok
sklearn.svm.tests.test_svm.test_svr_errors ... ok
Test OneClassSVM ... ok
Test OneClassSVM decision function ... ok
Make sure some tweaking of parameters works. ... ok
Predict probabilities using SVC ... ok
Test decision_function ... ok
Test class weights ... ok
Test weights on individual samples ... ok
Test class weights for imbalanced data ... ok
Test that it gives proper exception on deficient input ... ok
Test possible parameter combinations in LinearSVC ... ok
Test basic routines using LinearSVC ... ok
Test LinearSVC with crammer_singer multi-class svm ... ok
Test that LinearSVC gives plausible predictions on the iris dataset ... ok
Test that dense liblinear honours intercept_scaling param ... ok
sklearn.svm.tests.test_svm.test_liblinear_set_coef ... ok
Check that primal coef modification are not silently ignored ... ok
sklearn.svm.tests.test_svm.test_inheritance ... ok
sklearn.svm.tests.test_svm.test_linearsvc_verbose ... ok
sklearn.svm.tests.test_svm.test_svc_clone_with_callable_kernel ... ok
sklearn.svm.tests.test_svm.test_svc_bad_kernel ... ok
sklearn.svm.tests.test_svm.test_timeout ... ok
sklearn.svm.tests.test_svm.test_consistent_proba ... ok
Doctest: sklearn.tree.export.export_graphviz ... ok
Doctest: sklearn.tree.tree.DecisionTreeClassifier ... ok
Doctest: sklearn.tree.tree.DecisionTreeRegressor ... ok
Check correctness of export_graphviz ... ok
Check for errors of export_graphviz ... ok
sklearn.tree.tests.test_tree.test_balance_weights ... ok
Check classification on a toy dataset. ... ok
Check classification on a weighted toy dataset. ... ok
Check regression on a toy dataset. ... ok
Check on a XOR problem ... ok
Check consistency on dataset iris. ... ok
Check consistency on dataset boston house prices. ... ok
Predict probabilities using DecisionTreeClassifier. ... ok
Check the array representation. ... ok
Check when y is pure. ... ok
Check numerical stability. ... ok
Check variable importances. ... ok
Check max_features. ... ok
Test that it gives proper exception on deficient input. ... ok
Test if leaves contain more than leaf_count training examples ... ok
Check that tree estimator are pickable ... ok
Check estimators on multi-output problems. ... ok
Test that n_classes_ and classes_ have proper shape. ... ok
Check class rebalancing. ... ok
Check that it works no matter the memory layout ... ok
Check sample weighting. ... ok
Check if 32bit and 64bit get the same result. ... ok
Doctest: sklearn.utils.arpack._eigs ... ok
Doctest: sklearn.utils.arpack._eigsh ... ok
Doctest: sklearn.utils.extmath.cartesian ... ok
Doctest: sklearn.utils.extmath.logsumexp ... ok
Doctest: sklearn.utils.extmath.pinvh ... ok
Doctest: sklearn.utils.extmath.weighted_mode ... ok
Doctest: sklearn.utils.graph.single_source_shortest_path_length ... ok
Doctest: sklearn.utils.multiclass.is_label_indicator_matrix ... ok
Doctest: sklearn.utils.multiclass.is_multilabel ... ok
Doctest: sklearn.utils.multiclass.is_sequence_of_sequences ... ok
Doctest: sklearn.utils.multiclass.type_of_target ... ok
Doctest: sklearn.utils.multiclass.unique_labels ... ok
sklearn.utils.sparsetools.tests.test_spanning_tree.test_minimum_spanning_tree ... ok
sklearn.utils.sparsetools.tests.test_traversal.test_graph_breadth_first ... ok
sklearn.utils.sparsetools.tests.test_traversal.test_graph_depth_first ... ok
sklearn.utils.tests.test_bench.test_total_seconds ... ok
Test (and demo) compute_class_weight. ... ok
Test compute_class_weight in case y doesn't contain all classes. ... ok
sklearn.utils.tests.test_extmath.test_density ... ok
sklearn.utils.tests.test_extmath.test_uniform_weights ... ok
sklearn.utils.tests.test_extmath.test_random_weights ... ok
sklearn.utils.tests.test_extmath.test_logsumexp ... ok
Check that extmath.randomized_svd is consistent with linalg.svd ... ok
Check that extmath.randomized_svd can handle noisy matrices ... ok
Check that extmath.randomized_svd can handle noisy matrices ... ok
Check that transposing the design matrix has limit impact ... ok
sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip ... ok
Check if cartesian product delivers the right results ... ok
Check correctness and robustness of logistic sigmoid implementation ... ok
sklearn.utils.tests.test_fixes.test_in1d ... ok
sklearn.utils.tests.test_fixes.test_divide ... ok
sklearn.utils.tests.test_fixes.test_copysign ... ok
sklearn.utils.tests.test_graph.test_graph_laplacian ... ok
sklearn.utils.tests.test_linear_assignment.test_hungarian ... ok
sklearn.utils.tests.test_multiclass.test_unique_labels ... ok
sklearn.utils.tests.test_multiclass.test_is_multilabel ... ok
sklearn.utils.tests.test_multiclass.test_is_label_indicator_matrix ... ok
sklearn.utils.tests.test_multiclass.test_is_sequence_of_sequences ... ok
sklearn.utils.tests.test_multiclass.test_type_of_target ... ok
sklearn.utils.tests.test_murmurhash.test_mmhash3_int ... ok
sklearn.utils.tests.test_murmurhash.test_mmhash3_int_array ... ok
sklearn.utils.tests.test_murmurhash.test_mmhash3_bytes ... ok
sklearn.utils.tests.test_murmurhash.test_mmhash3_unicode ... ok
sklearn.utils.tests.test_murmurhash.test_no_collision_on_byte_range ... ok
sklearn.utils.tests.test_murmurhash.test_uniform_distribution ... ok
sklearn.utils.tests.test_random.test_invalid_sample_without_replacement_algorithm ... ok
sklearn.utils.tests.test_random.test_sample_without_replacement_algorithms ... ok
sklearn.utils.tests.test_shortest_path.test_floyd_warshall ... ok
sklearn.utils.tests.test_shortest_path.test_dijkstra ... ok
sklearn.utils.tests.test_shortest_path.test_shortest_path ... ok
sklearn.utils.tests.test_shortest_path.test_dijkstra_bug_fix ... ok
sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis0 ... ok
sklearn.utils.tests.test_sparsefuncs.test_densify_rows ... ok
test_warn (sklearn.utils.tests.test_testing.TestWarns) ... ok
test_warn_wrong_warning (sklearn.utils.tests.test_testing.TestWarns) ... ok
sklearn.utils.tests.test_testing.test_assert_less ... ok
sklearn.utils.tests.test_testing.test_assert_greater ... ok
sklearn.utils.tests.test_testing.test_set_random_state ... ok
sklearn.utils.tests.test_testing.test_assert_raise_message ... ok
Check the check_random_state utility function behavior ... ok
Border case not worth mentioning in doctests ... ok
Test whether the deprecated decorator issues appropriate warnings ... ok
Check that invalid arguments yield ValueError ... ok
sklearn.utils.tests.test_utils.test_safe_mask ... ok
sklearn.utils.tests.test_utils.test_pinvh_simple_real ... ok
sklearn.utils.tests.test_utils.test_pinvh_nonpositive ... ok
sklearn.utils.tests.test_utils.test_pinvh_simple_complex ... ok
sklearn.utils.tests.test_utils.test_column_or_1d ... ok
Test function for as_float_array ... ok
Check that invalid arguments raise appropriate exceptions ... ok
Confirm that input validation code does not return np.matrix ... ok
Confirm that input validation code doesn't copy memory mapped arrays ... ok
Check that ordering is enforced correctly by validation utilities. ... ok
sklearn.utils.tests.test_validation.test_check_arrays ... ok
Doctest: sklearn.utils.deprecated ... ok
Doctest: sklearn.utils.gen_even_slices ... ok
Doctest: sklearn.utils.resample ... ok
Doctest: sklearn.utils.shuffle ... ok
Tests that clone creates a correct deep copy. ... ok
Tests that clone doesn't copy everything. ... ok
Check that clone raises an error on buggy estimators. ... ok
Regression test for cloning estimators with empty arrays ... ok
Smoke test the repr of the base estimator. ... ok
Smoke test the str of the base estimator ... ok
sklearn.tests.test_base.test_get_params ... ok
sklearn.tests.test_base.test_get_params_deprecated ... ok
sklearn.tests.test_base.test_is_classifier ... ok
sklearn.tests.test_base.test_set_params ... ok
sklearn.tests.test_check_build.test_raise_build_error ... ok
sklearn.tests.test_common.test_all_estimators ... ok
sklearn.tests.test_common.test_estimators_sparse_data ... ok
sklearn.tests.test_common.test_transformers ... FAIL
sklearn.tests.test_common.test_transformers_sparse_data ... ok
sklearn.tests.test_common.test_estimators_nan_inf ... ok
sklearn.tests.test_common.test_transformers_pickle ... ok
sklearn.tests.test_common.test_classifiers_one_label ... ok
sklearn.tests.test_common.test_clustering ... ok
sklearn.tests.test_common.test_classifiers_train ... ok
sklearn.tests.test_common.test_classifiers_classes ... ok
sklearn.tests.test_common.test_classifiers_input_shapes ... FAIL
sklearn.tests.test_common.test_classifiers_pickle ... ok
sklearn.tests.test_common.test_regressors_int ... ok
sklearn.tests.test_common.test_regressors_train ... ok
sklearn.tests.test_common.test_regressor_pickle ... ok
sklearn.tests.test_common.test_configure ... ok
sklearn.tests.test_common.test_class_weight_classifiers ... ok
sklearn.tests.test_common.test_class_weight_auto_classifies ... ok
sklearn.tests.test_common.test_estimators_overwrite_params ... ok
sklearn.tests.test_common.test_cluster_overwrite_params ... ok
sklearn.tests.test_common.test_import_all_consistency ... ok
sklearn.tests.test_cross_validation.test_kfold_valueerrors ... ok
sklearn.tests.test_cross_validation.test_kfold_indices ... ok
sklearn.tests.test_cross_validation.test_kfold_balance ... ok
sklearn.tests.test_cross_validation.test_shuffle_kfold ... ok
sklearn.tests.test_cross_validation.test_shuffle_split ... ok
sklearn.tests.test_cross_validation.test_stratified_shuffle_split_init ... ok
sklearn.tests.test_cross_validation.test_stratified_shuffle_split_iter ... ok
sklearn.tests.test_cross_validation.test_stratified_shuffle_split_iter_no_indices ... ok
Check that LeaveOneLabelOut and LeavePLabelOut work normally if ... ok
sklearn.tests.test_cross_validation.test_cross_val_score ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_precomputed ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_fit_params ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_score_func ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_errors ... ok
sklearn.tests.test_cross_validation.test_train_test_split_errors ... ok
sklearn.tests.test_cross_validation.test_train_test_split ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_with_score_func_classification ... ok
sklearn.tests.test_cross_validation.test_cross_val_score_with_score_func_regression ... ok
sklearn.tests.test_cross_validation.test_permutation_score ... ok
sklearn.tests.test_cross_validation.test_cross_val_generator_with_mask ... ok
sklearn.tests.test_cross_validation.test_cross_val_generator_with_indices ... ok
sklearn.tests.test_cross_validation.test_cross_val_generator_mask_indices_same ... ok
sklearn.tests.test_cross_validation.test_bootstrap_errors ... ok
sklearn.tests.test_cross_validation.test_bootstrap_test_sizes ... ok
sklearn.tests.test_cross_validation.test_shufflesplit_errors ... ok
sklearn.tests.test_cross_validation.test_shufflesplit_reproducible ... ok
sklearn.tests.test_cross_validation.test_cross_indices_exception ... ok
sklearn.tests.test_dummy.test_most_frequent_strategy ... ok
sklearn.tests.test_dummy.test_most_frequent_strategy_multioutput ... ok
sklearn.tests.test_dummy.test_stratified_strategy ... ok
sklearn.tests.test_dummy.test_stratified_strategy_multioutput ... ok
sklearn.tests.test_dummy.test_uniform_strategy ... ok
sklearn.tests.test_dummy.test_uniform_strategy_multioutput ... ok
sklearn.tests.test_dummy.test_string_labels ... ok
sklearn.tests.test_dummy.test_classifier_exceptions ... ok
sklearn.tests.test_dummy.test_regressor ... ok
sklearn.tests.test_dummy.test_multioutput_regressor ... ok
sklearn.tests.test_dummy.test_regressor_exceptions ... ok
Test basic properties of ParameterGrid. ... ok
Test that the best estimator contains the right value for foo_param ... ok
sklearn.tests.test_grid_search.test_grid_search_no_score ... ok
Test search over a "grid" with only one point. ... ok
Test that grid search can be used for model selection only ... ok
Test that grid search will capture errors on data with different ... ok
sklearn.tests.test_grid_search.test_grid_search_iid ... ok
sklearn.tests.test_grid_search.test_grid_search_one_grid_point ... ok
sklearn.tests.test_grid_search.test_grid_search_bad_param_grid ... ok
Test that grid search works with both dense and sparse matrices ... ok
sklearn.tests.test_grid_search.test_grid_search_sparse_scoring ... ok
sklearn.tests.test_grid_search.test_deprecated_score_func ... ok
Test that grid search works when the input features are given in the ... ok
Test that grid search returns an error with a non-square precomputed ... ok
Test that grid search returns an error when using a kernel_function ... ok
Regression test for bug in refitting ... ok
Pass X as list in GridSearchCV ... ok
sklearn.tests.test_grid_search.test_unsupervised_grid_search ... ok
sklearn.tests.test_grid_search.test_bad_estimator ... ok
sklearn.tests.test_grid_search.test_param_sampler ... ok
sklearn.tests.test_grid_search.test_randomized_search_cv_scores ... ok
sklearn.tests.test_grid_search.test_grid_search_score_consistency ... ok
Test that a fit search can be pickled ... ok
Test search with multi-output estimator ... ok
test_attributes (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_decode_map_algorithm (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_fit (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_fit_emissionprob (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_fit_with_init (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_predict (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_sample (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_score_samples (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_set_emissionprob (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_wikipedia_viterbi_example (sklearn.tests.test_hmm.MultinomialHMMTestCase) ... ok
test_base_hmm_attributes (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_do_backward_pass (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_do_forward_pass (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_do_viterbi_pass (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_hmm_decode_consistent_with_gmm (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_hmm_score_samples_consistent_with_gmm (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_init (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_score_samples (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_set_startprob (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_set_transmat (sklearn.tests.test_hmm.TestBaseHMM) ... ok
test_attributes (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... SKIP: Unstable test: trainll is not always increasing depending on seed
test_fit_means (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... SKIP: Unstable test: trainll is not always increasing depending on seed
test_fit_startprob_and_transmat (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... SKIP: Unstable test: trainll is not always increasing depending on seed
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGMMHMMWithDiagCovars) ... ok
test_attributes (sklearn.tests.test_hmm.TestGMMHMMWithFullCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGMMHMMWithFullCovars) ... SKIP: Unstable test: trainll is not always increasing depending on seed
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGMMHMMWithFullCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGMMHMMWithFullCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGMMHMMWithFullCovars) ... ok
test_attributes (sklearn.tests.test_hmm.TestGMMHMMWithTiedCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGMMHMMWithTiedCovars) ... SKIP: Unstable test: trainll is not always increasing depending on seed
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGMMHMMWithTiedCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGMMHMMWithTiedCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGMMHMMWithTiedCovars) ... ok
test_bad_covariance_type (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_fit_non_ergodic_transmat (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_fit_with_priors (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGaussianHMMWithDiagonalCovars) ... ok
test_bad_covariance_type (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_fit_non_ergodic_transmat (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_fit_with_priors (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGaussianHMMWithFullCovars) ... ok
test_bad_covariance_type (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_fit_non_ergodic_transmat (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_fit_startprob_and_transmat (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_fit_with_priors (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGaussianHMMWithSphericalCovars) ... ok
test_bad_covariance_type (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_fit (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_fit_non_ergodic_transmat (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_fit_with_priors (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_fit_works_on_sequences_of_different_length (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_sample (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
test_score_samples_and_decode (sklearn.tests.test_hmm.TestGaussianHMMWithTiedCovars) ... ok
sklearn.tests.test_hmm.test_normalize_1D ... ok
sklearn.tests.test_hmm.test_normalize_3D ... ok
Test either above import has failed for some reason ... ok
sklearn.tests.test_isotonic.test_isotonic_regression ... ok
sklearn.tests.test_isotonic.test_isotonic_regression_reversed ... ok
sklearn.tests.test_isotonic.test_assert_raises_exceptions ... ok
test that AdditiveChi2Sampler approximates kernel on random data ... ok
test that RBFSampler approximates kernel on random data ... ok
test that RBFSampler approximates kernel on random data ... ok
Regression test: kernel approx. transformers should work on lists ... ok
sklearn.tests.test_kernel_approximation.test_nystroem_approximation ... ok
Non-regression: Nystroem should pass other parameters beside gamma. ... ok
Test Nystroem on a callable. ... ok
LDA classification. ... ok
sklearn.tests.test_lda.test_lda_transform ... ok
sklearn.tests.test_multiclass.test_ovr_exceptions ... ok
sklearn.tests.test_multiclass.test_ovr_fit_predict ... ok
sklearn.tests.test_multiclass.test_ovr_always_present ... ok
sklearn.tests.test_multiclass.test_ovr_multilabel ... ok
sklearn.tests.test_multiclass.test_ovr_fit_predict_svc ... ok
sklearn.tests.test_multiclass.test_ovr_multilabel_dataset ... ok
sklearn.tests.test_multiclass.test_ovr_multilabel_predict_proba ... ok
sklearn.tests.test_multiclass.test_ovr_single_label_predict_proba ... ok
sklearn.tests.test_multiclass.test_ovr_multilabel_decision_function ... ok
sklearn.tests.test_multiclass.test_ovr_single_label_decision_function ... ok
sklearn.tests.test_multiclass.test_ovr_gridsearch ... ok
sklearn.tests.test_multiclass.test_ovr_pipeline ... ok
sklearn.tests.test_multiclass.test_ovr_coef_ ... ok
sklearn.tests.test_multiclass.test_ovr_coef_exceptions ... ok
sklearn.tests.test_multiclass.test_ovo_exceptions ... ok
sklearn.tests.test_multiclass.test_ovo_fit_predict ... ok
sklearn.tests.test_multiclass.test_ovo_gridsearch ... ok
sklearn.tests.test_multiclass.test_ovo_ties ... ok
sklearn.tests.test_multiclass.test_ovo_ties2 ... ok
sklearn.tests.test_multiclass.test_ecoc_exceptions ... ok
sklearn.tests.test_multiclass.test_ecoc_fit_predict ... ok
sklearn.tests.test_multiclass.test_ecoc_gridsearch ... ok
Gaussian Naive Bayes classification. ... ok
Test whether class priors are properly set. ... ok
Test whether class priors are properly set. ... ok
Test Multinomial Naive Bayes classification. ... ok
sklearn.tests.test_naive_bayes.test_discretenb_partial_fit(<class 'sklearn.naive_bayes.MultinomialNB'>,) ... ok
sklearn.tests.test_naive_bayes.test_discretenb_partial_fit(<class 'sklearn.naive_bayes.BernoulliNB'>,) ... ok
Test picklability of discrete naive Bayes classifiers ... ok
Test input checks for the fit method ... ok
sklearn.tests.test_naive_bayes.test_input_check_partial_fit ... ok
Test discrete NB classes' probability scores ... ok
Test whether discrete NB classes fit a uniform prior ... ok
Test whether discrete NB classes use provided prior ... ok
sklearn.tests.test_naive_bayes.test_deprecated_fit_param ... ok
sklearn.tests.test_naive_bayes.test_sample_weight_multiclass(<class 'sklearn.naive_bayes.BernoulliNB'>,) ... ok
sklearn.tests.test_naive_bayes.test_sample_weight_multiclass(<class 'sklearn.naive_bayes.MultinomialNB'>,) ... ok
sklearn.tests.test_naive_bayes.test_sample_weight_mnb ... ok
coef_ and intercept_ should have shapes as in other linear models. ... ok
sklearn.tests.test_naive_bayes.test_check_accuracy_on_digits ... ok
Test the various init parameters of the pipeline. ... ok
Test the various methods of the pipeline (anova). ... ok
Test that the pipeline can take fit parameters ... ok
Test the various methods of the pipeline (pca + svm). ... ok
Test the various methods of the pipeline (preprocessing + svm). ... ok
sklearn.tests.test_pipeline.test_feature_union ... ok
sklearn.tests.test_pipeline.test_pipeline_transform ... ok
sklearn.tests.test_pipeline.test_pipeline_fit_transform ... ok
sklearn.tests.test_pipeline.test_feature_union_weights ... ok
sklearn.tests.test_pipeline.test_feature_union_feature_names ... ok
QDA classification. ... ok
sklearn.tests.test_qda.test_qda_priors ... ok
sklearn.tests.test_qda.test_qda_store_covariances ... ok
sklearn.tests.test_qda.test_qda_regularization ... ok
sklearn.tests.test_random_projection.test_invalid_jl_domain ... ok
sklearn.tests.test_random_projection.test_input_size_jl_min_dim ... ok
Check basic properties of random matrix generation ... ok
Check some statical properties of Gaussian random matrix ... ok
Check some statical properties of sparse random matrix ... ok
sklearn.tests.test_random_projection.test_sparse_random_projection_transformer_invalid_density ... ok
sklearn.tests.test_random_projection.test_random_projection_transformer_invalid_input ... ok
sklearn.tests.test_random_projection.test_try_to_transform_before_fit ... ok
sklearn.tests.test_random_projection.test_too_many_samples_to_find_a_safe_embedding ... ok
sklearn.tests.test_random_projection.test_random_projection_embedding_quality ... ok
sklearn.tests.test_random_projection.test_SparseRandomProjection_output_representation ... ok
sklearn.tests.test_random_projection.test_correct_RandomProjection_dimensions_embedding ... ok
sklearn.tests.test_random_projection.test_warning_n_components_greater_than_n_features ... ok
Doctest: sklearn._NoseTester.test ... ok

======================================================================
FAIL: sklearn.tests.test_common.test_transformers
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.7/dist-packages/nose/case.py", line 197, in runTest
    self.test(*self.arg)
  File "/home/andy/checkout/scikit-learn/sklearn/tests/test_common.py", line 240, in test_transformers
    assert_true(succeeded)
AssertionError: False is not true
    'False is not true' = self._formatMessage('False is not true', "%s is not true" % safe_repr(False))
>>  raise self.failureException('False is not true')
    

======================================================================
FAIL: sklearn.tests.test_common.test_classifiers_input_shapes
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.7/dist-packages/nose/case.py", line 197, in runTest
    self.test(*self.arg)
  File "/home/andy/checkout/scikit-learn/sklearn/tests/test_common.py", line 670, in test_classifiers_input_shapes
    assert_equal(len(w), 1)
AssertionError: 0 != 1
    '0 != 1' = '%s != %s' % (safe_repr(0), safe_repr(1))
    '0 != 1' = self._formatMessage('0 != 1', '0 != 1')
>>  raise self.failureException('0 != 1')
    

----------------------------------------------------------------------
Ran 2622 tests in 116.763s

FAILED (SKIP=14, failures=2)
